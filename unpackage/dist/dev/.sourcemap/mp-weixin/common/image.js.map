{"version":3,"file":"image.js","sources":["common/image.js"],"sourcesContent":["import {\r\n\twebsiteUrl, image1Url\r\n} from \"./config.js\";\r\n\r\n\r\n//选择图片\r\nexport function chooseImage() {\r\n\treturn new Promise(resolve => {\r\n\t\tuni.chooseImage({\r\n\t\t\tcount: 1,\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tresolve(res.tempFilePaths[0])\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}\r\n\r\n//裁切图片\r\nexport function jumpToCroper() {\r\n\tchooseImage().then(src => {\r\n\t\tuni.navigateTo({\r\n\t\t\turl: `/pages/pop_croper/pop_croper?src=${decodeURIComponent(src)}`\r\n\t\t})\r\n\t})\r\n}\n\n\n// 获取七牛云上传凭证\nexport function getQiniuToken() {\n  return new Promise((resolve, reject) => {\n    let token = uni.getStorageSync('token');\n    uni.request({\n      url: websiteUrl + '/with-state/qiniu-token',\n      method: \"POST\",\n      header: {\n        'Authorization': token,\n      },\n      success: (res) => {\n        if (res.data.data && res.data.data.token) {\n          console.log(\"获取到的七牛token：\" + res.data.data.token);\n          resolve(res.data.data);\n        } else {\n          uni.showToast({\n            title: '获取上传凭证失败',\n            icon: 'none',\n          });\n          reject('获取上传凭证失败');\n        }\n      },\n      fail: (err) => {\n        uni.showToast({\n          title: '获取上传凭证失败',\n          icon: 'none',\n        });\n        reject('获取上传凭证失败');\n      }\n    });\n  });\n}\n\n\n// 上传图片到七牛云\nexport function uploadImageToQiniu(croperPath, qnToken, fileName) {\n  let authorization = uni.getStorageSync('token');\n  return new Promise((resolve, reject) => {\n    uni.uploadFile({\n      url: 'https://up-cn-east-2.qiniup.com',\n      name: 'file',\n      method: \"POST\",\n      filePath: croperPath,\n      fileType: 'image',\n      formData: {\n        token: qnToken,\n        key: fileName,\n        scope: \"hobby-box:\" + fileName,\n      },\n      success: async (res) => {\n        try {\n          // 构造完整图片URL（根据你的实际URL结构调整）\n          const fullUrl = image1Url + fileName;\n          \n          // 调用日志接口\n          const logRes = await uni.request({\n            url: `${websiteUrl}/with-state/add-image-log`,\n            method: 'POST',\n            header: {\n              'Content-Type': 'application/json',\n              'Authorization': authorization,\n            },\n            data: {\n              image_url: fullUrl\n            }\n          });\n\t\t\tconsole.log(logRes)\n          if (logRes.data.status !== \"success\") {\n            throw new Error('上传图片失败');\n          }\n\n          resolve({ qiniuRes: res, imageUrl: fullUrl });\n        } catch (logErr) {\n          console.error('日志记录失败:', logErr);\n          uni.showToast({\n            title: '日志记录失败',\n            icon: 'none'\n          });\n          reject('日志记录失败');\n        }\n      },\n      fail: (err) => {\n        uni.showToast({\n          title: '上传失败',\n          icon: 'none',\n        });\n        reject('上传失败');\n      }\n    });\n  });\n}"],"names":["uni","websiteUrl","image1Url"],"mappings":";;;AAMO,SAAS,cAAc;AAC7B,SAAO,IAAI,QAAQ,aAAW;AAC7BA,kBAAAA,MAAI,YAAY;AAAA,MACf,OAAO;AAAA,MACP,SAAS,CAAC,QAAQ;AACjB,gBAAQ,IAAI,cAAc,CAAC,CAAC;AAAA,MAC5B;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AACF;AAaO,SAAS,gBAAgB;AAC9B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,QAAQA,cAAAA,MAAI,eAAe,OAAO;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV,KAAKC,cAAU,aAAG;AAAA,MAClB,QAAQ;AAAA,MACR,QAAQ;AAAA,QACN,iBAAiB;AAAA,MAClB;AAAA,MACD,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,KAAK,QAAQ,IAAI,KAAK,KAAK,OAAO;AACxCD,8BAAA,MAAA,OAAA,yBAAY,iBAAiB,IAAI,KAAK,KAAK,KAAK;AAChD,kBAAQ,IAAI,KAAK,IAAI;AAAA,QAC/B,OAAe;AACLA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AACD,iBAAO,UAAU;AAAA,QAClB;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACbA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QAChB,CAAS;AACD,eAAO,UAAU;AAAA,MAClB;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;AAIO,SAAS,mBAAmB,YAAY,SAAS,UAAU;AAChE,MAAI,gBAAgBA,cAAAA,MAAI,eAAe,OAAO;AAC9C,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,WAAW;AAAA,MACb,KAAK;AAAA,MACL,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,QACR,OAAO;AAAA,QACP,KAAK;AAAA,QACL,OAAO,eAAe;AAAA,MACvB;AAAA,MACD,SAAS,OAAO,QAAQ;AACtB,YAAI;AAEF,gBAAM,UAAUE,cAAS,YAAG;AAG5B,gBAAM,SAAS,MAAMF,cAAG,MAAC,QAAQ;AAAA,YAC/B,KAAK,GAAGC,cAAU,UAAA;AAAA,YAClB,QAAQ;AAAA,YACR,QAAQ;AAAA,cACN,gBAAgB;AAAA,cAChB,iBAAiB;AAAA,YAClB;AAAA,YACD,MAAM;AAAA,cACJ,WAAW;AAAA,YACZ;AAAA,UACb,CAAW;AACRD,wBAAAA,MAAY,MAAA,OAAA,yBAAA,MAAM;AACX,cAAI,OAAO,KAAK,WAAW,WAAW;AACpC,kBAAM,IAAI,MAAM,QAAQ;AAAA,UACzB;AAED,kBAAQ,EAAE,UAAU,KAAK,UAAU,QAAS,CAAA;AAAA,QAC7C,SAAQ,QAAQ;AACfA,wBAAA,MAAA,MAAA,SAAA,0BAAc,WAAW,MAAM;AAC/BA,wBAAAA,MAAI,UAAU;AAAA,YACZ,OAAO;AAAA,YACP,MAAM;AAAA,UAClB,CAAW;AACD,iBAAO,QAAQ;AAAA,QAChB;AAAA,MACF;AAAA,MACD,MAAM,CAAC,QAAQ;AACbA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QAChB,CAAS;AACD,eAAO,MAAM;AAAA,MACd;AAAA,IACP,CAAK;AAAA,EACL,CAAG;AACH;;;;"}
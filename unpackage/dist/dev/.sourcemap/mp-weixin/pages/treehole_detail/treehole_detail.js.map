{"version":3,"file":"treehole_detail.js","sources":["pages/treehole_detail/treehole_detail.vue","pages/treehole_detail/treehole_detail.vue?type=page"],"sourcesContent":["<template>\r\n\t<view class=\"container\" v-if=\"detailData\">\n\t\t<meta name=\"theme-color\" content=\"#F8F8F8\"></meta>\r\n\t\t<!-- 头部作者信息 -->\r\n\t\t<view class=\"header\">\r\n\t\t\t<view class=\"author-info\">\r\n\t\t\t\t<image :src=\"detailData.avatar || '/static/noname.png' \" class=\"avatar\" mode=\"aspectFill\" />\r\n\t\t\t\t<view style=\"width: 500rpx;\">\r\n\t\t\t\t\t<text class=\"author-name\">{{ detailData.author_name }}</text>\r\n\t\t\t\t\t<view class=\"time\">{{ formatTime(detailData.created_at) }}</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<!-- 举报按钮 -->\n\t\t\t\t<view style=\"width: 120rpx;\">\n\t\t\t\t\t<report-button\n\t\t\t\t\t\treport-type=\"3\" \n\t\t\t\t\t\t:relation-id=\"parseInt(props.id)\" \n\t\t\t\t\t\tbutton-text=\"举报\" \n\t\t\t\t\t\ticon-type=\"flag\" \n\t\t\t\t\t\ticon-size=\"24\"\n\t\t\t\t\t\ticon-color=\"#666\"\n\t\t\t\t\t/>\n\t\t\t\t</view>\n\t\t\t  \n\r\n\t\t\t</view>\r\n\t\t\t<!-- \t\t\t<button class=\"share-btn\" open-type=\"share\">\r\n\t\t\t\t<image src=\"/static/images/share-icon.png\" class=\"share-icon\" />\r\n\t\t\t</button> -->\r\n\t\t</view>\r\n\r\n\t\t<!-- 正文内容 -->\r\n\t\t<view class=\"content\">{{ detailData.content }}</view>\r\n\r\n\t\t<!-- 图片展示区域 -->\r\n\t\t<view class=\"image-container\" :class=\"layoutClass\">\r\n\t\t\t<view v-for=\"(img, index) in displayImages\" :key=\"index\" class=\"image-wrapper\">\r\n\t\t\t\t<image :src=\"img\" mode=\"aspectFill\" class=\"image-item\" @click=\"previewImage(index)\" />\r\n\t\t\t\t<view v-if=\"showOverlay && index === 8\" class=\"image-overlay\">\r\n\t\t\t\t\t+{{ remainingCount }}\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<view class=\"action-bar\">\r\n\t\t\t<view class=\"action-group\">\r\n\t\t\t\t<view class=\"action-item\" @tap=\"handleLike\">\r\n\t\t\t\t\t<uni-icons :type=\"hasLiked ? 'hand-up-filled' : 'hand-up'\" size=\"24\"\r\n\t\t\t\t\t\t:color=\"hasLiked ? '#ff4d4f' : '#666'\" />\r\n\t\t\t\t\t<text class=\"action-text\">{{ detailData.like_count || 0 }}</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"action-item\" @tap=\"copyUrl(detailData)\">\r\n\t\t\t\t\t<uni-icons type=\"redo\" size=\"24\" color=\"#666\" />\r\n\t\t\t\t\t<text class=\"action-text\">分享</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<text class=\"time-text\">审核于 {{ formatTime(detailData.approve_time) }}</text>\n\t\t\t\r\n\t\t</view>\r\n\t</view>\r\n\r\n\t<!-- 加载状态 -->\r\n\t<view v-else class=\"loading\">加载中...</view>\r\n\r\n\t<!-- 评论区（保留原有结构，需根据接口调整） -->\r\n\t<view style=\"padding: 10px;\">\r\n\t\t<comment-list ref=\"commentListRef\" :type=\"5\" :relation-id=\"parseInt(props.id)\" @reply=\"handleReplyComment\" />\r\n\t</view> <!-- 加载状态 --\r\n\t\r\n\t<view v-if=\"error\" class=\"error\">{{ errorMsg }}</view>\r\n\r\n\r\n\t\t\r\n\t\t<!-- 输入框 -->\r\n\t<comment-input ref=\"commentInputRef\" :reply-info=\"replyForItem\" :target-id=\"pageId\" @submit=\"handleCommentSubmit\"\r\n\t\t@update:reply-info=\"val => replyForItem = val\" />\r\n\t<view style=\"width: 100%;height: 120rpx;\"></view>\r\n</template>\r\n\r\n<script setup>\r\n\timport {\r\n\t\tref,\r\n\t\tcomputed,\r\n\t\tonMounted\r\n\t} from 'vue';\r\n\r\n\timport {\r\n\t\twebsiteUrl,\r\n\t\timage1Url,\r\n\t\tglobal,\r\n\t\tasyncGetUserInfo,\r\n\t} from '../../common/config.js';\r\n\r\n\r\n\tconst loading = ref(true)\r\n\tconst error = ref(false)\r\n\tconst errorMsg = ref('')\r\n\tconst pageId = ref(0)\r\n\tconst detailData = ref(null);\r\n\t// 回复\r\n\tconst commentListRef = ref(null) // 必须与模板中的ref名称一致\r\n\tconst commentInputRef = ref(null) // 输入框聚焦状态联动\r\n\tlet commentsPage = ref(1)\r\n\t//引用回复\r\n\tlet replyForItem = ref({})\r\n\r\n\r\n\t// 点赞\r\n\tconst hasLiked = ref(false);\r\n\r\n\r\n\tconst props = defineProps({\r\n\t\tid: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t}\r\n\t});\r\n\r\n\t// 引用回复\r\n\tconst handleReplyComment = ({\r\n\t\tparent,\r\n\t\ttarget\r\n\t}) => {\r\n\t\tconsole.log(\"parent\", parent)\r\n\t\tconsole.log(\"target\", target)\r\n\t\t// 判断是回复的楼主还是楼内\r\n\t\tlet item = parent\r\n\t\tif (target != null) {\r\n\t\t\titem = target\r\n\t\t}\r\n\r\n\t\tif (replyForItem.value.id == item.id) {\r\n\t\t\treplyForItem.value = {}\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconsole.log(\"item\", item)\r\n\t\treplyForItem.value = item;\r\n\t\t// 聚焦输入框\r\n\t\tcommentInputRef.value?.focusInput()\r\n\t}\r\n\tconst handleCommentSubmit = ({\r\n\t\tcontent,\r\n\t\treplyInfo,\r\n\t\torigin\r\n\t}) => {\r\n\t\tlet token = uni.getStorageSync('token');\r\n\t\tif (!global.isLogin) {\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '请先登录',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconsole.log(\"reply_info\", replyInfo)\r\n\t\tconst requestData = {\r\n\t\t\tcontent,\r\n\t\t\torigin,\r\n\t\t\ttarget_id: parseInt(pageId.value),\r\n\t\t\ttype: 5,\r\n\t\t\t...(replyInfo.id && {\r\n\t\t\t\treply_id: replyInfo.id,\r\n\t\t\t\treply_for: replyInfo.comment,\r\n\t\t\t\treply_user_id: replyInfo.user_id,\r\n\t\t\t\tparent_id: replyInfo.parent_id > 0 ? replyInfo.parent_id : replyInfo.id,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tuni.request({\r\n\t\t\turl: websiteUrl + '/with-state/add-comment',\r\n\t\t\tmethod: 'POST',\r\n\t\t\theader: {\r\n\t\t\t\t'Authorization': token\r\n\t\t\t},\r\n\t\t\tdata: requestData,\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.data.status == \"success\") {\r\n\t\t\t\t\tconst newComment = res.data.data\r\n\t\t\t\t\tif (newComment.parent_id === 0) {\n\t\t\t\t\t\tconsole.log(\"添加主评论\")\r\n\t\t\t\t\t\t// 主评论\r\n\t\t\t\t\t\tcommentListRef.value?.addNewComment(newComment)\r\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(\"添加子评论\")\r\n\t\t\t\t\t\t// 子评论\r\n\t\t\t\t\t\tcommentListRef.value?.addReplyComment(newComment)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '评论成功',\r\n\t\t\t\t\t\ticon: 'success'\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: res.data.msg,\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '网络请求失败',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\t// 复制分享\r\n\tfunction copyUrl(item) {\r\n\t\tlet url = \"http://m.dogdogdoll.com/#/\" + \"pages/treehole_detail/treehole_detail?id=\" + item.id\r\n\t\t// 复制到剪贴板\r\n\t\tuni.setClipboardData({\r\n\t\t\tdata: url,\r\n\t\t\tsuccess: function() {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '复制链接成功',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// 处理点赞\r\n\tconst handleLike = () => {\r\n\t\tif (!global.isLogin) {\r\n\t\t\tuni.showModal({\r\n\t\t\t\ttitle: '提示',\r\n\t\t\t\tcontent: '需要登录后才能点赞',\r\n\t\t\t\tsuccess: res => {\r\n\t\t\t\t\tif (res.confirm) uni.navigateTo({\r\n\t\t\t\t\t\turl: '/pages/login/login'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst token = uni.getStorageSync('token');\r\n\t\tconst url = websiteUrl + (hasLiked.value ? '/with-state/unlike' : '/with-state/add-like');\r\n\r\n\t\tuni.request({\r\n\t\t\turl: url,\r\n\t\t\tmethod: 'POST',\r\n\t\t\theader: {\r\n\t\t\t\tAuthorization: token\r\n\t\t\t},\r\n\t\t\tdata: {\r\n\t\t\t\tid: parseInt(props.id),\r\n\t\t\t\ttype: 5 // 假设树洞类型为5\r\n\t\t\t},\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tif (res.data.status === \"success\") {\r\n\t\t\t\t\thasLiked.value = !hasLiked.value;\r\n\t\t\t\t\tdetailData.value.like_count += hasLiked.value ? 1 : -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t//获取是否点赞\r\n\tfunction getHasLike() {\r\n\t\tlet token = uni.getStorageSync('token');\r\n\t\tif (token == \"\") {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tuni.request({\r\n\t\t\turl: websiteUrl + '/with-state/hasLike?id=' + props.id + '&type=5',\r\n\t\t\tmethod: 'POST',\r\n\t\t\theader: {\r\n\t\t\t\t'Authorization': token,\r\n\t\t\t},\r\n\t\t\tsuccess: (res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tif (res.data.status == \"success\") {\r\n\t\t\t\t\t// goods.value = res.data.data;\r\n\t\t\t\t\tif (res.data.data.id > 0) {\r\n\t\t\t\t\t\thasLiked.value = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thasLiked.value = false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: res.data.msg,\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfail: (err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '网络请求失败',\r\n\t\t\t\t\ticon: 'none'\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// 图片显示逻辑\r\n\tconst displayImages = computed(() => {\r\n\t\treturn detailData.value?.images?.slice(0, 9) || [];\r\n\t});\r\n\r\n\tconst remainingCount = computed(() => {\r\n\t\treturn (detailData.value?.images?.length || 0) - 9;\r\n\t});\r\n\r\n\tconst showOverlay = computed(() => {\r\n\t\treturn (detailData.value?.images?.length || 0) > 9;\r\n\t});\r\n\r\n\t// 设置标题\r\n\tuni.setNavigationBarTitle({\r\n\t\ttitle: '投稿详情'\r\n\t})\r\n\t//格式化时间戳\r\n\tfunction formatTimestamp(timestamp) {\r\n\t\tconst date = new Date(timestamp * 1000);\r\n\t\tconst year = date.getFullYear();\r\n\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0'); // 月份从0开始，需要+1\r\n\t\tconst day = date.getDate().toString().padStart(2, '0');\r\n\t\tconst hours = date.getHours().toString().padStart(2, '0');\r\n\t\tconst minutes = date.getMinutes().toString().padStart(2, '0');\r\n\t\tconst seconds = date.getSeconds().toString().padStart(2, '0');\r\n\r\n\t\t// 返回格式化后的日期时间\r\n\t\treturn `${year}-${month}-${day} ${hours}:${minutes}`;\r\n\t}\r\n\r\n\tconst layoutClass = computed(() => {\r\n\t\tconst count = displayImages.value.length;\r\n\t\tif (count === 1) return 'single';\r\n\t\tif (count === 2) return 'double';\r\n\t\treturn 'multi';\r\n\t});\r\n\r\n\t// 时间格式化\r\n\tconst formatTime = (timestamp) => {\r\n\t\tconst date = new Date(timestamp * 1000);\r\n\t\treturn `${date.getFullYear()}-${String(date.getMonth()+1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\r\n\t};\r\n\r\n\t// 预览图片\r\n\tconst previewImage = (index) => {\r\n\t\tuni.previewImage({\r\n\t\t\tcurrent: index,\r\n\t\t\turls: detailData.value.images\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t// 获取数据\r\n\tonMounted(async () => {\r\n\t\tpageId.value = props.id\r\n\t\tconsole.log(\"pageId\", pageId.value)\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await uni.request({\r\n\t\t\t\turl: `${websiteUrl}/treehole-detail?id=${props.id}`\r\n\t\t\t});\r\n\r\n\t\t\tif (res.data.status === 'success') {\r\n\t\t\t\tdetailData.value = res.data.data;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t\tuni.showToast({\r\n\t\t\t\ttitle: '加载失败',\r\n\t\t\t\ticon: 'none'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\tasyncGetUserInfo()\r\n\t\tgetHasLike()\r\n\t});\r\n\r\n\t// 分享功能\r\n\t// uni.onShareAppMessage(() => {\r\n\t//   return {\r\n\t//     title: detailData.value?.author_name + '的树洞',\r\n\t//     path: `/pages/treehole/detail?id=${props.id}`\r\n\t//   };\r\n\t// });\r\n</script>\r\n\r\n<style lang=\"less\">\r\n\t.container {\r\n\t\tpadding: 30rpx;\r\n\t\tbackground: #fff;\r\n\t}\r\n\r\n\t.loading {\r\n\t\ttext-align: center;\r\n\t\tpadding: 40rpx;\r\n\t\tcolor: #999;\r\n\t}\r\n\r\n\t.header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin-bottom: 30rpx;\r\n\t}\r\n\r\n\t.author-info {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1;\r\n\t\toverflow: hidden;\r\n\t\tpadding-bottom: 10rpx;\r\n\r\n\t\t.avatar {\r\n\t\t\twidth: 80rpx;\r\n\t\t\theight: 80rpx;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tmargin-right: 20rpx;\r\n\t\t}\r\n\r\n\t\t.author-name {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tfont-weight: 800;\r\n\t\t\tcolor: #333;\r\n\t\t\tmax-width: 70%;\r\n\t\t\toverflow: hidden;\r\n\t\t\ttext-overflow: ellipsis;\r\n\t\t\twhite-space: nowrap;\r\n\t\t}\r\n\t}\r\n\r\n\t.load_more {\r\n\t\tbackground: #fff;\r\n\t\tcolor: #d6d6d6;\r\n\t\tfont-size: 13px;\r\n\t\tmargin-top: 15px;\r\n\r\n\t\t&::after {\r\n\t\t\tborder: none;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t.share-btn {\r\n\t\tbackground: none;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\r\n\t\t.share-icon {\r\n\t\t\twidth: 40rpx;\r\n\t\t\theight: 40rpx;\r\n\t\t}\r\n\r\n\t\t&::after {\r\n\t\t\tborder: none;\r\n\t\t}\r\n\t}\r\n\r\n\t.content {\r\n\t\tfont-size: 22rpx;\r\n\t\tcolor: #333;\r\n\t\tline-height: 1.6;\r\n\t\tmargin-bottom: 30rpx;\r\n\t}\r\n\r\n\t.image-container {\r\n\t\tmargin-bottom: 30rpx;\r\n\r\n\t\t&.single {\r\n\t\t\t.image-wrapper {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tpadding-bottom: 100%;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&.double {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tgap: 10rpx;\r\n\r\n\t\t\t.image-wrapper {\r\n\t\t\t\twidth: calc(50% - 5rpx);\r\n\t\t\t\tpadding-bottom: 50%;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&.multi {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tgap: 10rpx;\r\n\r\n\t\t\t.image-wrapper {\r\n\t\t\t\twidth: calc(33.333% - 12rpx);\r\n\t\t\t\tpadding-bottom: 33.333%;\r\n\t\t\t\tposition: relative;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.image-wrapper {\r\n\t\tposition: relative;\r\n\t\tborder-radius: 10rpx;\r\n\t\toverflow: hidden;\r\n\t\tbackground: #f5f5f5;\r\n\t}\r\n\r\n\t.image-item {\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.image-overlay {\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\tright: 0;\r\n\t\tbottom: 0;\r\n\t\tbackground: rgba(0, 0, 0, 0.5);\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tcolor: #fff;\r\n\t\tfont-size: 36rpx;\r\n\t}\r\n\r\n\t.time {\r\n\t\tfont-size: 24rpx;\r\n\t\tcolor: #999;\r\n\t}\r\n\r\n\t.action-bar {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tmargin: 40rpx 0;\r\n\t\tpadding: 20rpx 0;\r\n\t\tborder-top: 1rpx solid #f5f5f5;\r\n\t\tborder-bottom: 1rpx solid #f5f5f5;\r\n\r\n\t\t.action-group {\r\n\t\t\tdisplay: flex;\r\n\t\t\talign-items: center;\r\n\t\t\tgap: 40rpx;\r\n\r\n\t\t\t.action-item {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tpadding: 12rpx 24rpx;\r\n\t\t\t\tborder-radius: 40rpx;\r\n\t\t\t\tbackground: #f8f8f8;\r\n\t\t\t\ttransition: all 0.2s;\r\n\r\n\t\t\t\t&:active {\r\n\t\t\t\t\ttransform: scale(0.96);\r\n\t\t\t\t\tbackground: #f0f0f0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.action-text {\r\n\t\t\t\t\tmargin-left: 12rpx;\r\n\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\tcolor: #666;\r\n\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.time-text {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #999;\r\n\t\t\tpadding-right: 20rpx;\r\n\t\t}\r\n\t}\r\n</style>","import MiniProgramPage from '/Users/sapphirell/Documents/git/dogdogdoll-uniapp/pages/treehole_detail/treehole_detail.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","global","websiteUrl","computed","onMounted","asyncGetUserInfo","MiniProgramPage"],"mappings":"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"}
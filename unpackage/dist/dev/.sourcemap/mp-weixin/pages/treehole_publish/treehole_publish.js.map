{"version":3,"file":"treehole_publish.js","sources":["pages/treehole_publish/treehole_publish.vue","pages/treehole_publish/treehole_publish.vue?type=page"],"sourcesContent":["<template>\n\t<view title=\"发布树洞\">\n\t\t<meta name=\"theme-color\" content=\"#F8F8F8\"></meta>\n\t\t<view-logs />\n\t\t<view class=\"publish-box\">\n\t\t\t<!-- 分类选择 -->\n\t\t\t<picker class=\"category-picker\" :range=\"categories\" range-key=\"label\" @change=\"handleCategoryChange\"\n\t\t\t\t:value=\"selectedIndex\">\n\t\t\t\t<view class=\"picker-content\">\n\t\t\t\t\t<text :class=\"['picker-text', selectedCategory ? '' : 'placeholder']\">\n\t\t\t\t\t\t{{ selectedCategoryLabel || '请选择分类（必选）' }}\n\t\t\t\t\t</text>\n\t\t\t\t\t<uni-icons type=\"right\" size=\"22\" color=\"#888\"></uni-icons>\n\t\t\t\t</view>\n\t\t\t</picker>\n\t\t\t<!-- 上传图片列表 -->\n\t\t\t<scroll-view scroll-x=\"true\" class=\"upload_box\" ll-with-animation=\"true\" :show-scrollbar=\"false\">\n\t\t\t\t<view class=\"upload_item\" v-for=\"(item, index) in uploadList\" :key=\"index\">\n\t\t\t\t\t<image :src=\"item\" class=\"uploaded_image\" @tap=\"viewFullImage\" mode=\"aspectFill\" />\n\t\t\t\t\t<image src=\"/static/cancel.png\" class=\"close_icon\" @tap=\"deleteImage(index)\" />\n\t\t\t\t</view>\n\t\t\t\t<view class=\"uploadImageBox\" style=\"background: #f8f8f8;\">\n\t\t\t\t\t<image src=\"/static/add2.png\" class=\"upload_img\" @tap=\"selectImage(index)\"\n\t\t\t\t\t\tstyle=\"width: 50px;height: 50px;margin: 25px;\" />\n\t\t\t\t</view>\n\n\t\t\t</scroll-view>\n\t\t\t<textarea v-model=\"content\" placeholder=\"写下你想说的话...\" class=\"textarea\" maxlength=\"500\" />\n\n\n\t\t\t<view class=\"anonymous\">\n\t\t\t\t<checkbox-group @change=\"handleAnonymous\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<checkbox :checked=\"isAnonymous === 1\" color=\"#4cbbd0\" />\n\t\t\t\t\t\t<text>匿名发布</text>\n\t\t\t\t\t</label>\n\t\t\t\t</checkbox-group>\n\t\t\t</view>\n\n\n\t\t\t<view class=\"publish-detail\">\n\t\t\t\t<text>* 目前树洞为非审稿发布，只接受娃圈相关内容。</text>\n\t\t\t\t<!-- <text>* 我们会在工作时间进行审稿，您可以在个人投稿中心查看投稿状态，审核通过后稿件才被可见。</text> -->\n\t\t\t\t<text>* 如果勾选匿名发布，他人将无法通过稿件进入您的主页。如果稿件遭到过多点踩或投诉，我们可能会隐藏这封稿件。</text>\n\t\t\t</view>\n\n\t\t\t<button class=\"submit-btn\" :class=\"{ disabled: !canSubmit }\" @click=\"handleSubmit\">\n\t\t\t\t提交\n\t\t\t</button>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup>\n\timport {\n\t\tonMounted,\n\t\tref,\n\t\tcomputed,\n\t} from 'vue';\n\timport {\n\t\twebsiteUrl,\n\t\timage1Url,\n\t\twechatSignLogin,\n\t\tgetUserInfo,\n\t\tglobal,\n\t\tasyncGetUserInfo,\n\t} from \"../../common/config.js\";\n\n\timport {\n\t\tchooseImage,\n\t\tjumpToCroper,\n\t\tgetQiniuToken,\n\t\tuploadImageToQiniu\n\t} from \"../../common/image.js\";\n\n\tconst content = ref('')\n\n\tconst isAnonymous = ref(0)\n\tconst uploadList = ref([]);\n\n\t// 新增分类相关数据\n\tconst categories = ref([]) // 存储分类数据\n\tconst selectedCategory = ref('') // 选中的分类ID\n\n\tconst selectedIndex = ref(-1)\n\tconst selectedCategoryLabel = ref('')\n\n\n\tfunction viewFullImage(index) {\n\t\tuni.previewImage({\n\t\t\tcurrent: uploadList.value[index],\n\t\t\turls: uploadList.value\n\t\t});\n\t}\n\n\n\tfunction handleAnonymous(e) {\n\t\tisAnonymous.value = e.detail.value.length > 0 ? 1 : 0\n\t}\n\t// 设置标题\n\tuni.setNavigationBarTitle({\n\t\ttitle: '投稿树洞'\n\t})\n\n\n\n\t//选择图片\n\tfunction selectImage() {\n\t\tconsole.log(\"openSelect\")\n\t\tchooseImage().then((res) => {\n\t\t\tgetQiniuToken().then((tokenData) => {\n\t\t\t\tconsole.log(tokenData)\n\n\t\t\t\tuploadImageToQiniu(res, tokenData.token, tokenData.path).then((uploadRes) => {\n\t\t\t\t\tif (uploadRes.statusCode != 200) {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: '上传失败',\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(image1Url + tokenData.path)\n\t\t\t\t\t//image1Url + tokenData.path;\n\t\t\t\t\tuploadList.value.push(image1Url + tokenData.path);\n\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '上传成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\n\t\t\t\t}) //uploadImageToQiniu\n\t\t\t}) //getQiniuToken\n\t\t}) //chooseImage\n\t}\n\n\n\t// 获取分类列表\n\tconst fetchCategories = async () => {\n\t\ttry {\n\t\t\tconst res = await uni.request({\n\t\t\t\turl: websiteUrl.value + '/treehole-typelist',\n\t\t\t\tmethod: 'GET'\n\t\t\t})\n\t\t\tif (res.data.status === \"success\") {\n\t\t\t\t// 转换数据结构为 {value, label} 格式\n\t\t\t\tcategories.value = Object.entries(res.data.data).map(([value, label]) => ({\n\t\t\t\t\tvalue: Number(value),\n\t\t\t\t\tlabel\n\t\t\t\t}))\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('获取分类失败:', err)\n\t\t}\n\t}\n\n\t// 处理选择事件\n\tfunction handleCategoryChange(e) {\n\t\tconst index = e.detail.value\n\t\tif (index >= 0 && categories.value[index]) {\n\t\t\tselectedIndex.value = index\n\t\t\tselectedCategory.value = categories.value[index].value\n\t\t\tselectedCategoryLabel.value = categories.value[index].label\n\t\t}\n\t}\n\n\t// 修改提交校验逻辑\n\tconst canSubmit = computed(() => {\n\t\treturn content.value.trim().length > 0 && selectedCategory.value !== null\n\t})\n\tasync function handleSubmit() {\n\t\tif (!canSubmit.value) return\n\n\n\t\tif (!selectedCategory.value) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请选择分类',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\n\t\ttry {\n\t\t\tuni.showLoading({\n\t\t\t\ttitle: '提交中...'\n\t\t\t})\n\n\t\t\t// 检查登录状态\n\t\t\tconst token = uni.getStorageSync('token')\n\t\t\tif (!token) {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '请先登录',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// 构造提交数据\n\t\t\tconst postData = {\n\t\t\t\tcontent: content.value.trim(),\n\t\t\t\timages: uploadList.value,\n\t\t\t\tis_anonymous: isAnonymous.value,\n\t\t\t\tcategory_id: selectedCategory.value,\n\t\t\t}\n\n\t\t\tconst res = await uni.request({\n\t\t\t\turl: websiteUrl.value + '/with-state/add-submission',\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata: postData,\n\t\t\t\theader: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Authorization': token,\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tuni.hideLoading()\n\n\t\t\tif (res.data.status == \"success\") {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '已收到您的投稿',\n\t\t\t\t\ticon: 'success'\n\t\t\t\t})\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// 提交成功后清空数据\n\t\t\t\t\tcontent.value = ''\n\t\t\t\t\tuploadList.value = []\n\t\t\t\t\tisAnonymous.value = 0\n\t\t\t\t\tuni.navigateBack()\n\t\t\t\t}, 1500)\n\t\t\t} else {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: res.data.msg || '提交失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tuni.hideLoading()\n\t\t\tconsole.error('提交失败:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '网络请求失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n\n\n\tonMounted(() => {\n\t\tfetchCategories()\n\t})\n</script>\n\n<style lang=\"less\" scoped>\n\t.publish-box {\n\t\tpadding: 30rpx;\n\t}\n\n\t.textarea {\n\t\twidth: 650rpx;\n\t\theight: 300rpx;\n\t\tpadding: 20rpx;\n\t\tbackground: #f8f8f8;\n\t\tborder-radius: 12rpx;\n\t\tmargin-bottom: 30rpx;\n\t}\n\n\t.anonymous {\n\t\tmargin: 30rpx 0;\n\n\t\ttext {\n\t\t\tcolor: #666;\n\t\t\tfont-size: 28rpx;\n\t\t\tmargin-left: 10rpx;\n\t\t}\n\t}\n\n\t.submit-btn {\n\t\tbackground: #4cbbd0;\n\t\tcolor: #fff;\n\t\tborder-radius: 50rpx;\n\n\t\t&.disabled {\n\t\t\tbackground: #ccc;\n\t\t\tcolor: #999;\n\t\t}\n\t}\n\n\t.uploaded_image {\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tmargin-right: 10px;\n\n\t}\n\n\t.upload_box {\n\t\t// 核心修改点：\n\t\twidth: 100%; // 避免使用 100vw（可能因滚动条导致宽度溢出）\n\t\twhite-space: nowrap; // 强制子元素不换行\n\t\toverflow-x: auto; // 确保横向滚动生效（UniApp的scroll-view组件已封装滚动逻辑，此处为保险可保留）\n\t\tdisplay: block; // 明确容器为块级元素\n\t\tmargin-bottom: 35rpx;\n\n\n\t\tview {\n\t\t\tdisplay: inline-block; // 关键！强制子元素横向排列（替代 float）\n\t\t\tvertical-align: top; // 对齐方式（避免图片底部留白）\n\t\t}\n\n\t\t.upload_item {\n\t\t\tposition: relative;\n\t\t\twidth: 100px;\n\t\t\tmargin-right: 10px;\n\n\t\t\tborder-radius: 5px;\n\t\t\toverflow: hidden;\n\n\t\t\t.uploaded_image {\n\t\t\t\twidth: 100px;\n\t\t\t\theight: 100px;\n\t\t\t}\n\n\t\t\t.close_icon {\n\t\t\t\tposition: absolute;\n\t\t\t\tright: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 20px;\n\t\t\t\theight: 20px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.publish-detail {\n\t\ttext {\n\t\t\tdisplay: block;\n\t\t\tcolor: #888;\n\t\t\tmargin: 20rpx 20rpx;\n\t\t}\n\t}\n\n\t// 分类选择\n\t.category-picker {\n\t\tdisplay: block;\n\t\theight: 70rpx;\n\t\tline-height: 70rpx;\n\t\tpadding: 0 30rpx;\n\t\tmargin: 30rpx 0;\n\t\tbackground: #f8f8f8;\n\t\tborder-radius: 12rpx;\n\t\tborder: 1px solid #e0e0e0;\n\n\t\t.picker-content {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t}\n\n\t\t.picker-text {\n\t\t\tcolor: #333;\n\t\t\tfont-size: 24rpx;\n\n\t\t\t&.placeholder {\n\t\t\t\tcolor: #999;\n\t\t\t}\n\t\t}\n\n\t\t&:active {\n\t\t\tbackground: #f0f0f0;\n\t\t}\n\t}\n\n\n\t// 优化提交按钮间距\n\t.submit-btn {\n\t\tmargin-top: 50rpx;\n\t}\n\n\n\t/deep/ .uni-picker-action-confirm {\n\t\tcolor: #4cbbd0!important;\n\n\t}\n</style>","import MiniProgramPage from '/Users/sapphirell/Documents/git/dogdogdoll-uniapp/pages/treehole_publish/treehole_publish.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","chooseImage","getQiniuToken","uploadImageToQiniu","image1Url","websiteUrl","computed","onMounted"],"mappings":"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"}
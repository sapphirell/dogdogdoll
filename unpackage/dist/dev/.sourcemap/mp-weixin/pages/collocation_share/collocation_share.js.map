{"version":3,"file":"collocation_share.js","sources":["pages/collocation_share/collocation_share.vue","pages/collocation_share/collocation_share.vue?type=page"],"sourcesContent":["<template>\n\t<view>\n\t\t<view-logs />\n\t\t<!-- 图片轮播区域 -->\n\t\t<view style=\"position: relative;\">\n\t\t\t<view class=\"heart\" @click=\"likeFn()\">\n\t\t\t\t<!-- \t\t\t\t<image src=\"../../static/heart-w.png\" v-if=\"!hasLike\"></image>\n\t\t\t\t<image src=\"../../static/heart2.png\" v-else></image> -->\n\t\t\t\t<uni-icons type=\"heart\" size=\"28\" color=\"#ff4d4f\" v-if=\"!hasLike\"></uni-icons>\n\t\t\t\t<uni-icons type=\"heart-filled\" size=\"28\" color=\"#ff4d4f\" v-else></uni-icons>\n\n\t\t\t\t<text class=\"num\">{{ detailData?.like_count ? formatNumber(detailData.like_count) : 0 }}</text>\n\t\t\t</view>\n\t\t\t<swiper class=\"swiper-box\" :indicator-dots=\"true\" :autoplay=\"false\">\n\t\t\t\t<swiper-item v-for=\"(img, index) in detailData.image_url_list\" :key=\"index\">\n\t\t\t\t\t<image :src=\"img\" mode=\"aspectFill\" class=\"swiper-image\" @tap=\"viewFullImage(index)\" />\n\t\t\t\t</swiper-item>\n\t\t\t</swiper>\n\n\t\t</view>\n\t\t<!-- 新增作者信息区域 -->\n\t\t<view class=\"author-info\" @click=\"jump2user(detailData.uid)\">\n\t\t\t<image class=\"avatar\" :src=\"authorInfo.avatar\" mode=\"aspectFill\" />\n\t\t\t<view class=\"user-meta\">\n\t\t\t\t<text class=\"username\">{{ authorInfo.user_name || '未知用户' }}</text>\n\t\t\t\t<!-- 新增发布时间 -->\n\t\t\t\t<text class=\"publish-time\">发布于 {{ formatTimestamp(detailData.created_at) }}</text>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 图文信息区域 -->\n\t\t<view class=\"content-box\">\n\t\t\t<view style=\"display: flex;justify-content: space-between;\">\n\t\t\t\t<text class=\"title\">{{ detailData.title }}</text>\n\t\t\t\t<view class=\"report-container\">\n\t\t\t\t\t<report-button :report-type=\"origin === 1 ? 2 : 1\" :relation-id=\"parseInt(pageId)\" icon-type=\"flag\"\n\t\t\t\t\t\ticon-color=\"#999\" />\n\t\t\t\t</view>\n\t\t\t</view>\n\n\t\t\t<text class=\"content\">{{ detailData.content }}</text>\n\n\t\t</view>\n\n\t\t<!-- 关联商品列表 -->\n\t\t<view class=\"goods-list\">\n\t\t\t<!-- <text class=\"about\">相关商品</text> -->\n\t\t\t<view v-for=\"item in detailData.collocation_relation_list\" :key=\"item.id\" class=\"goods-item\"\n\t\t\t\t@click=\"navigateToRelated(item)\">\n\t\t\t\t<!-- 商品图片 -->\n\t\t\t\t<view class=\"image-container\">\n\t\t\t\t\t<template v-if=\"item.relation_goods_id === 0\">\n\t\t\t\t\t\t<view class=\"placeholder-box\">\n\t\t\t\t\t\t\t<text style=\"color: #fff;font-size: 45px;\">?</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t<image v-if=\"item.imageLoaded\"\n\t\t\t\t\t\t\t:src=\"item.goodsInfo?.goods_images?.[0] || '/static/goods-default.png'\" mode=\"aspectFill\"\n\t\t\t\t\t\t\tclass=\"goods-image\" />\n\t\t\t\t\t\t<view v-else-if=\"item.imageError\" class=\"error-box\">\n\t\t\t\t\t\t\t<text>图片加载失败</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view v-else class=\"loading-box\">\n\t\t\t\t\t\t\t<text>加载中...</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</template>\n\t\t\t\t</view>\n\n\t\t\t\t<view class=\"goods-info\">\n\t\t\t\t\t<text class=\"brand\">{{ item.relation_brand_name }} - {{ item.relation_goods_name }}</text>\n\t\t\t\t\t<view>\n\t\t\t\t\t\t<text class=\"category\">{{ item.type }}</text>\n\t\t\t\t\t\t<text class=\"price\">\n\t\t\t\t\t\t\t（{{ item.goodsInfo && item.goodsInfo.total_amount ? item.goodsInfo.total_amount + item.goodsInfo.currency : \"贩售价格未收录\"}}）</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"see font-alimamashuhei\">\n\t\t\t\t\t\t去看看 →\n\t\t\t\t\t</view>\n\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\n\t\t<!-- 评论区（保留原有结构，需根据接口调整） -->\n\t\t<view style=\"padding: 10px;\" v-if=\"origin > 0\">\n\t\t\t<comment-list ref=\"commentListRef\" :type=\"origin == 1 ? 3 : 6\" :relation-id=\"parseInt(pageId)\"\n\t\t\t\t@reply=\"handleReplyComment\" />\n\t\t</view> <!-- 加载状态 -->\n\n\n\t\t<!-- 输入框 -->\n\t\t<comment-input v-if=\"detailData.title\" ref=\"commentInputRef\" :reply-info=\"replyForItem\" :target-id=\"pageId\"\n\t\t\t@submit=\"handleCommentSubmit\" @update:reply-info=\"val => replyForItem = val\" />\n\n\t\t<view style=\"width: 100%;height: 120rpx;\"></view>\n\n\n\n\t\t<!-- 加载状态 -->\n\t\t<view v-if=\"loading\" class=\"loading\">加载中...</view>\n\t\t<view v-if=\"error\" class=\"error\">{{ errorMsg }}</view>\n\t</view>\n</template>\n\n<script setup>\n\timport {\n\t\tref,\n\t\tonMounted,\n\t\tcomputed,\n\t} from 'vue'\n\timport {\n\t\tonLoad,\n\t\tonShow,\n\t\tonHide,\n\t} from \"@dcloudio/uni-app\";\n\timport {\n\t\twebsiteUrl,\n\t\timage1Url,\n\t\twechatSignLogin,\n\t\tgetUserInfo,\n\t\tglobal,\n\t\tasyncGetUserInfo,\n\t\tgetScene,\n\t} from \"../../common/config.js\";\n\n\timport {\n\t\tchooseImage,\n\t\tjumpToCroper,\n\t\tgetQiniuToken,\n\t\tuploadImageToQiniu\n\t} from \"../../common/image.js\";\n\n\tconst detailData = ref({\n\t\ttitle: '',\n\t\tcontent: '',\n\t\timage_url_list: [],\n\t\tcollocation_relation_list: []\n\t})\n\n\t// 新增作者信息响应式数据\n\tconst authorInfo = ref({\n\t\tuserName: '',\n\t\tavatar: ''\n\t})\n\n\t// 获取系统信息\n\tconst systemInfo = uni.getSystemInfoSync()\n\n\n\n\tconst loading = ref(true)\n\tconst error = ref(false)\n\tconst errorMsg = ref('')\n\n\tconst props = defineProps({\n\n\t\tcollocation_id: {\n\t\t\ttype: String,\n\t\t\tdefault: 0\n\t\t},\n\t\torigin: {\n\t\t\ttype: String,\n\t\t\tdefault: 0\n\t\t},\n\t})\n\t//页面id \n\tconst pageId = ref(0)\n\tconst origin = ref(0)\n\t//是否点赞过\n\tlet hasLike = ref(false)\n\n\t// 回复\n\tconst commentListRef = ref(null) // 必须与模板中的ref名称一致\n\tconst commentInputRef = ref(null) // 输入框聚焦状态联动\n\tlet commentsPage = ref(1)\n\t//引用回复\n\tlet replyForItem = ref({})\n\n\n\t// 设置页面标题\n\tuni.setNavigationBarTitle({\n\t\ttitle: '搭配详情'\n\t})\n\n\t//跳转到用户页面\n\tfunction jump2user(uid) {\n\t\tuni.navigateTo({\n\t\t\turl: '/pages/user_page/user_page?uid=' + uid\n\t\t})\n\t}\n\n\n\t// 获取商品详情\n\tconst getGoodsInfo = (id) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!id || id === 0) {\n\t\t\t\treject('无效的商品ID')\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tuni.request({\n\t\t\t\turl: `${websiteUrl.value}/goods?id=${id}`,\n\t\t\t\tmethod: 'GET',\n\t\t\t\ttimeout: 5000,\n\t\t\t\tsuccess: (res) => {\n\t\t\t\t\tif (res.data.status === 'success') {\n\t\t\t\t\t\tresolve(res.data.data)\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(res.data.msg || '获取商品信息失败')\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfail: (err) => {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '网络请求失败',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treject(err)\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n\t//viewFullImage\n\tfunction viewFullImage(index) {\n\t\tconsole.log(detailData)\n\t\tuni.previewImage({\n\t\t\tcurrent: detailData.value.image_url_list[index],\n\t\t\turls: detailData.value.image_url_list\n\t\t})\n\t}\n\n\t// 修改后的数据获取逻辑\n\tconst fetchData = async (id, origin) => {\n\t\ttry {\n\t\t\tconst res = await uni.request({\n\t\t\t\turl: websiteUrl.value + `/view-collocation?collocation_id=${id}&origin=${origin}`,\n\t\t\t})\n\n\t\t\tif (res.data.status !== 'success') {\n\t\t\t\thandleError(res.data.msg || '数据加载失败')\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// 处理商品数据\n\t\t\tconst processedData = {\n\t\t\t\t...res.data.data,\n\t\t\t\timage_url_list: Array.isArray(res.data.data.image_url_list) ?\n\t\t\t\t\tres.data.data.image_url_list : [res.data.data.image_urls],\n\t\t\t\tcollocation_relation_list: await Promise.all(\n\t\t\t\t\tres.data.data.collocation_relation_list.map(async (item) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// 仅当relation_goods_id有效时获取商品信息\n\t\t\t\t\t\t\tconst goodsInfo = item.relation_goods_id > 0 ?\n\t\t\t\t\t\t\t\tawait getGoodsInfo(item.relation_goods_id) :\n\t\t\t\t\t\t\t\tnull\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tgoodsInfo,\n\t\t\t\t\t\t\t\timageLoaded: !!goodsInfo,\n\t\t\t\t\t\t\t\timageError: !goodsInfo\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('商品信息获取失败:', error)\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tgoodsInfo: null,\n\t\t\t\t\t\t\t\timageLoaded: false,\n\t\t\t\t\t\t\t\timageError: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tdetailData.value = processedData\n\n\t\t\t// 获取作者信息\n\t\t\tif (res.data.data?.uid) {\n\t\t\t\tawait getAuthorInfo(res.data.data.uid)\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\thandleError('数据加载失败')\n\t\t} finally {\n\t\t\tloading.value = false\n\t\t}\n\t}\n\n\t// 商品点击跳转方法\n\tconst navigateToRelated = (item) => {\n\t\t// 如果有有效的商品ID，跳转到商品页面\n\t\tif (item.relation_goods_id > 0) {\n\t\t\tuni.navigateTo({\n\t\t\t\turl: `/pages/goods/goods?goods_id=${item.relation_goods_id}`\n\t\t\t})\n\t\t}\n\t\t// 如果有有效的品牌ID，跳转到品牌页面\n\t\telse if (item.relation_brand_id > 0) {\n\t\t\tuni.navigateTo({\n\t\t\t\turl: `/pages/brand/brand?brand_id=${item.relation_brand_id}`\n\t\t\t})\n\t\t}\n\t\t// 都没有时提示\n\t\telse {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '暂无商品和品牌信息',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n\t// 新增获取用户信息方法\n\tconst getAuthorInfo = async (uid) => {\n\t\ttry {\n\t\t\tconst res = await uni.request({\n\t\t\t\turl: `${websiteUrl.value}/user-info?uid=${uid}`,\n\t\t\t\tmethod: 'GET'\n\t\t\t})\n\n\t\t\tif (res.data.status === 'success') {\n\t\t\t\tauthorInfo.value = res.data.data\n\t\t\t} else {\n\t\t\t\tconsole.error('获取用户信息失败:', res.data.msg)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('用户信息请求失败:', error)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '作者信息加载失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t}\n\n\t// 新增跳转用户主页\n\tconst navigateToUser = (uid) => {\n\t\tif (uid) {\n\t\t\tuni.navigateTo({\n\t\t\t\turl: `/pages/user/profile?uid=${uid}`\n\t\t\t})\n\t\t}\n\t}\n\n\t// 错误处理\n\tconst handleError = (msg) => {\n\t\terror.value = true\n\t\terrorMsg.value = msg\n\t\tuni.showToast({\n\t\t\ttitle: msg,\n\t\t\ticon: 'none'\n\t\t})\n\t}\n\n\t//喜欢\n\tfunction likeFn() {\n\t\tlet token = uni.getStorageSync('token');\n\t\tif (!global.isLogin) {\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '请先登录',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t//区分type, origin=1,type=3   origin=2,type=4\n\t\tlet type = origin.value == 1 ? 3 : 4\n\n\t\tlet requestData = {\n\t\t\tid: parseInt(detailData.value.id),\n\t\t\ttype: type,\n\t\t}\n\t\t// 判断是请求点赞接口还是取消点赞接口 add-like unlike\n\t\tlet url = hasLike.value ? '/with-state/unlike' : '/with-state/add-like';\n\t\tuni.request({\n\t\t\turl: websiteUrl.value + url,\n\t\t\tmethod: 'POST',\n\t\t\theader: {\n\t\t\t\t'Authorization': token,\n\t\t\t},\n\t\t\tdata: requestData,\n\t\t\tsuccess: (res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tif (res.data.status == \"success\") {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '操作成功',\n\t\t\t\t\t\ticon: 'success'\n\t\t\t\t\t})\n\t\t\t\t\thasLike.value = !hasLike.value\n\t\t\t\t\tgetHasLike(detailData.value.id)\n\t\t\t\t\tfetchData(detailData.value.id, origin.value)\n\t\t\t\t\treturn\n\t\t\t\t} else {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: res.data.msg,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '网络请求失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t},\n\t\t});\n\t}\n\t//获取是否点赞\n\tfunction getHasLike(id) {\n\t\tlet token = uni.getStorageSync('token');\n\t\tif (token == \"\") {\n\t\t\treturn\n\t\t}\n\t\t//区分type, origin=1,type=3   origin=2,type=4\n\t\tlet type = origin.value == 1 ? 3 : 4\n\t\tuni.request({\n\t\t\turl: websiteUrl.value + '/with-state/hasLike?id=' + id + '&type=' + type,\n\t\t\tmethod: 'POST',\n\t\t\theader: {\n\t\t\t\t'Authorization': token,\n\t\t\t},\n\t\t\tsuccess: (res) => {\n\t\t\t\tif (res.data.status == \"success\") {\n\t\t\t\t\t// goods.value = res.data.data;\n\t\t\t\t\tif (res.data.data.id > 0) {\n\t\t\t\t\t\thasLike.value = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\thasLike.value = false\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: res.data.msg,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail: (err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: '网络请求失败',\n\t\t\t\t\ticon: 'none'\n\t\t\t\t})\n\t\t\t},\n\t\t});\n\t}\n\t//格式化数字\n\tfunction formatNumber(num) {\n\t\tif (num < 1000) {\n\t\t\treturn num.toString();\n\t\t} else {\n\t\t\tconst kValue = Math.floor(num / 1000);\n\t\t\treturn `${kValue}k+`;\n\t\t}\n\t}\n\n\n\t// 引用回复\n\tconst handleReplyComment = ({\n\t\tparent,\n\t\ttarget\n\t}) => {\n\t\tconsole.log(\"parent\", parent)\n\t\tconsole.log(\"target\", target)\n\t\t// 判断是回复的楼主还是楼内\n\t\tlet item = parent\n\t\tif (target != null) {\n\t\t\titem = target\n\t\t}\n\n\t\tif (replyForItem.value.id == item.id) {\n\t\t\treplyForItem.value = {}\n\t\t\treturn\n\t\t}\n\t\tconsole.log(\"item\", item)\n\t\treplyForItem.value = item;\n\t\t// 聚焦输入框\n\t\tcommentInputRef.value?.focusInput()\n\t}\n\n\tconst onShareAppMessage = () => ({\n\t\ttitle: 'BJD娃圈你想知道的这里都有~',\n\t\tpath: '/pages/news/news',\n\t\tsuccess(res) {\n\t\t\tconsole.log('分享成功', res)\n\t\t},\n\t\tfail(err) {\n\t\t\tconsole.log('分享失败', err)\n\t\t},\n\t\tmp: {\n\t\t\twxpath: '/pages/index/index.html'\n\t\t}\n\t})\n\t\n\t\n\t\n\t  // 评论提交处理\n\t  const handleCommentSubmit = (submitData) => {\n\t    let token = uni.getStorageSync('token');\n\t    if (!global.isLogin) {\n\t      uni.showToast({\n\t        title: '请先登录',\n\t        icon: 'none'\n\t      })\n\t      return\n\t    }\n\t    \n\t    // 确定评论类型\n\t    const commentType = origin.value == 1 ? 3 : 6;\n\t    \n\t    const requestData = {\n\t      content: submitData.content,\n\t      origin: submitData.origin,\n\t      target_id: parseInt(pageId.value),\n\t      type: commentType,\n\t      image_url: submitData.image_url || \"\",\n\t      association_id: submitData.association_id || 0,\n\t      association_type: submitData.association_type || 0,\n\t      is_anonymous: submitData.is_anonymous || 0,\n\t      ...(replyForItem.value.id && {\n\t        reply_id: replyForItem.value.id,\n\t        reply_for: replyForItem.value.comment,\n\t        reply_uid: replyForItem.value.user_id,\n\t        parent_id: replyForItem.value.parent_id > 0 ? \n\t          replyForItem.value.parent_id : replyForItem.value.id,\n\t      })\n\t    }\n\t    \n\t    // 创建临时评论对象\n\t    const tempComment = {\n\t      id: Date.now(), // 临时ID\n\t      content: submitData.content,\n\t      created_at: Math.floor(Date.now() / 1000),\n\t      like_count: 0,\n\t      reply_count: 0,\n\t      is_liked: false,\n\t      floor: 0, // 临时楼层数\n\t      \n\t      // 匿名处理\n\t      ...(submitData.is_anonymous ? {\n\t        avatar: \"https://images1.fantuanpu.com/home/default_avatar.jpg\",\n\t        username: \"匿名用户\",\n\t        is_anonymous: 1\n\t      } : {\n\t        avatar: global.userInfo.avatar,\n\t        username: global.userInfo.nickname,\n\t        is_anonymous: 0\n\t      }),\n\t      \n\t      // 关联信息\n\t      ...(submitData.association_id && {\n\t        association_id: submitData.association_id,\n\t        association_type: submitData.association_type\n\t      }),\n\t      \n\t      // 图片信息\n\t      ...(submitData.image_url && {\n\t        image_url: submitData.image_url\n\t      }),\n\t      \n\t      // 回复信息\n\t      ...(replyForItem.value.id && {\n\t        reply_id: replyForItem.value.id,\n\t        reply_for: replyForItem.value.comment,\n\t        reply_uid: replyForItem.value.user_id,\n\t        parent_id: replyForItem.value.parent_id > 0 ? \n\t          replyForItem.value.parent_id : replyForItem.value.id,\n\t        // 处理被回复者的匿名状态\n\t        reply_username: replyForItem.value.is_anonymous ? \n\t          \"匿名用户\" : replyForItem.value.username\n\t      })\n\t    }\n\t    \n\t    // 添加临时评论\n\t    if (!replyForItem.value.id) {\n\t      // 主评论\n\t      commentListRef.value?.addNewComment(tempComment)\n\t    } else if (replyForItem.value.parent_id === 0) {\n\t      // 回复主评论\n\t      commentListRef.value?.addReplyComment({\n\t        ...tempComment,\n\t        parent_id: replyForItem.value.id\n\t      })\n\t    } else {\n\t      // 回复楼中楼评论\n\t      commentListRef.value?.addReplyComment({\n\t        ...tempComment,\n\t        parent_id: replyForItem.value.parent_id\n\t      })\n\t    }\n\t  \n\t    uni.request({\n\t      url: websiteUrl.value + '/with-state/add-comment',\n\t      method: 'POST',\n\t      header: {\n\t        'Authorization': token\n\t      },\n\t      data: requestData,\n\t      success: (res) => {\n\t        if (res.data.status == \"success\") {\n\t          const newComment = res.data.data\n\t          \n\t          // 处理匿名状态\n\t          const finalComment = {\n\t            ...newComment,\n\t            ...(submitData.is_anonymous ? {\n\t              avatar: \"https://images1.fantuanpu.com/home/default_avatar.jpg\",\n\t              username: \"匿名用户\",\n\t              is_anonymous: 1\n\t            } : {\n\t              avatar: global.userInfo.avatar,\n\t              username: global.userInfo.nickname,\n\t              is_anonymous: 0\n\t            })\n\t          }\n\t          \n\t          // 处理被回复者的匿名状态\n\t          if (newComment.reply_uid && replyForItem.value.is_anonymous) {\n\t            finalComment.reply_username = \"匿名用户\"\n\t          }\n\t  \n\t          // 更新临时评论为真实评论\n\t          commentListRef.value?.updateTempComment(tempComment.id, finalComment)\n\t  \n\t          uni.showToast({\n\t            title: '评论成功',\n\t            icon: 'success'\n\t          })\n\t  \n\t        } else {\n\t          // 请求失败，移除临时评论\n\t          commentListRef.value?.removeTempComment(tempComment.id)\n\t          uni.showToast({\n\t            title: res.data.msg,\n\t            icon: 'none'\n\t          })\n\t        }\n\t      },\n\t      fail: (err) => {\n\t        // 请求失败，移除临时评论\n\t        commentListRef.value?.removeTempComment(tempComment.id)\n\t        uni.showToast({\n\t          title: '网络请求失败',\n\t          icon: 'none'\n\t        })\n\t      }\n\t    });\n\t  }\n\t\n\n\t//格式化时间戳\n\tfunction formatTimestamp(timestamp) {\n\t\tconst date = new Date(timestamp * 1000);\n\t\tconst year = date.getFullYear();\n\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0'); // 月份从0开始，需要+1\n\t\tconst day = date.getDate().toString().padStart(2, '0');\n\t\tconst hours = date.getHours().toString().padStart(2, '0');\n\t\tconst minutes = date.getMinutes().toString().padStart(2, '0');\n\t\tconst seconds = date.getSeconds().toString().padStart(2, '0');\n\n\t\t// 返回格式化后的日期时间\n\t\treturn `${year}-${month}-${day} ${hours}:${minutes}`;\n\t}\n\n\t// 生命周期\n\tonShow(() => {\n\t\tif (process.env.VUE_APP_PLATFORM == \"h5\") {\n\t\t\t//h5不会弹出软键盘\n\t\t\treturn\n\t\t}\n\t\tconsole.log(\"注册键盘弹出事件\")\n\t\tuni.onKeyboardHeightChange(keyboardHeightChangeHandler)\n\t})\n\n\n\t// 获取路由参数\n\tonLoad((options) => {\n\t\ttry {\n\t\t\tif (!options.collocation_id) {\n\t\t\t\terror.value = true\n\t\t\t\terrorMsg.value = '缺少必要参数Id'\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (!options.origin) {\n\t\t\t\terror.value = true\n\t\t\t\terrorMsg.value = '缺少必要参数Origin'\n\t\t\t\treturn\n\t\t\t}\n\t\t\tpageId.value = options.collocation_id\n\t\t\torigin.value = options.origin\n\t\t\tfetchData(options.collocation_id, options.origin)\n\t\t\t//获取登录\n\t\t\tasyncGetUserInfo().then((userInfo) => {\n\t\t\t\tconsole.log(userInfo)\n\t\t\t\tgetHasLike(options.collocation_id)\n\n\t\t\t})\n\n\t\t} catch (err) {\n\t\t\tconsole.error('onLoad Error:', err)\n\t\t\tuni.showToast({\n\t\t\t\ttitle: '加载失败',\n\t\t\t\ticon: 'none'\n\t\t\t})\n\t\t}\n\t})\n</script>\n\n<style lang=\"less\" scoped>\n\t// .container {\n\t// \tpadding: 20rpx;\n\t// }\n\n\t.swiper-box {\n\t\theight: 750rpx;\n\t}\n\n\t.swiper-image {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t/* 小红心 */\n\t.heart {\n\t\tposition: absolute;\n\t\ttop: 10px;\n\t\tright: 20px;\n\t\tz-index: 10;\n\t\twidth: 50px;\n\t\theight: 30px;\n\n\t\t.uni-icons {\n\t\t\twidth: 30px;\n\t\t\theight: 30px;\n\t\t}\n\n\t\timage {\n\t\t\twidth: 30px;\n\t\t\theight: 30px;\n\t\t}\n\n\t\t.num {\n\t\t\tcolor: #888;\n\t\t\tfont-size: 14px;\n\t\t\tdisplay: inline-block;\n\t\t\tposition: relative;\n\t\t\tmargin: 10rpx;\n\t\t\ttop: -5px;\n\t\t\t// left: 35px;\n\t\t\tfont-weight: 1000;\n\t\t\tcolor: #ff4d4f;\n\n\t\t}\n\t}\n\n\n\t/* 页面主体 */\n\n\t.content-box {\n\t\tpadding: 30rpx 0;\n\t}\n\n\t.title {\n\t\tfont-size: 28rpx;\n\t\tfont-weight: 800;\n\t\tmargin-bottom: 20rpx;\n\t\tpadding: 30rpx 30rpx 0rpx 30rpx;\n\t}\n\n\t.report-container {\n\t\tmargin: 15rpx 0 0 0;\n\t\tdisplay: inline-block;\n\t\twidth: 140rpx;\n\t\tbackground: #fff;\n\t\tpadding: 10rpx 20rpx;\n\t\tborder-radius: 10rpx;\n\t}\n\n\t.content {\n\t\tdisplay: inline-block;\n\t\tfont-size: 22rpx;\n\t\tcolor: #666;\n\t\tline-height: 1.6;\n\t\tpadding: 30rpx 30rpx 0rpx 30rpx;\n\t\twidth: 100%;\n\t\toverflow: hidden;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.goods-list {\n\t\tmargin-top: 40rpx;\n\t\tpadding-top: 20rpx;\n\t\tbackground: linear-gradient(1deg, #ffffff 0%, #f7f7f7 100%);\n\t}\n\n\t.goods-item {\n\t\tdisplay: flex;\n\t\tpadding: 20rpx;\n\t\tpadding-left: 40rpx;\n\t\tmargin-bottom: 10rpx;\n\t\tbackground: #fff;\n\t\tborder-radius: 12rpx;\n\t\t// box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.08);\n\t}\n\n\t.goods-image {\n\t\twidth: 100rpx;\n\t\theight: 100rpx;\n\t\tborder-radius: 8rpx;\n\t\tmargin-right: 30rpx;\n\t}\n\n\t.goods-info {\n\t\tflex: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tposition: relative;\n\t}\n\n\t.brand {\n\t\tfont-size: 26rpx;\n\t\tfont-weight: bold;\n\t\tcolor: #333;\n\t}\n\n\t.category {\n\t\tfont-size: 22rpx;\n\t\tcolor: #666;\n\t\tdisplay: inline-block;\n\t}\n\n\t.price {\n\t\tfont-size: 22rpx;\n\t\tcolor: #666;\n\t\tdisplay: inline-block;\n\t}\n\n\t.see {\n\t\tposition: absolute;\n\t\tright: 0;\n\t\tfont-size: 0.6875rem;\n\t\tcolor: #d1d1d1;\n\t\tbackground: linear-gradient(90deg, #ffffff 0%, #f4f4f4 100%);\n\t\theight: 60px;\n\t\twidth: 106px;\n\t\ttext-align: center;\n\t\tborder-radius: 0 20px 20px 0;\n\t\tline-height: 60px;\n\t\ttext-align: right;\n\t\tpadding-right: 15px;\n\t}\n\n\t.name {\n\t\tfont-size: 24rpx;\n\t\tcolor: #444;\n\t}\n\n\t.loading,\n\t.error {\n\t\ttext-align: center;\n\t\tpadding: 40rpx;\n\t\tfont-size: 28rpx;\n\t\tcolor: #999;\n\t}\n\n\t/* 新增样式 */\n\t.image-container {\n\t\twidth: 100rpx;\n\t\theight: 100rpx;\n\t\tmargin-right: 30rpx;\n\t\tposition: relative;\n\t}\n\n\t.placeholder-box,\n\t.error-box,\n\t.loading-box {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: #f5f5f5;\n\t\tborder-radius: 8rpx;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.error-box text,\n\t.loading-box text {\n\t\tfont-size: 24rpx;\n\t\tcolor: #999;\n\t}\n\n\t.placeholder-box {\n\t\tbackground: #e0e0e0;\n\t}\n\n\t/* 新增作者信息样式 */\n\t.author-info {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tpadding: 30rpx 30rpx 0rpx 30rpx;\n\t\tmargin: 20rpx 0;\n\n\t\t.avatar {\n\t\t\twidth: 40px;\n\t\t\theight: 40px;\n\t\t\tborder-radius: 100%;\n\t\t\tmargin-right: 20rpx;\n\t\t}\n\n\t\t.user-meta {\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t}\n\n\t\t.username {\n\t\t\tfont-size: 28rpx;\n\t\t\tfont-weight: 900;\n\t\t\tcolor: #333;\n\t\t\tmax-width: 400rpx;\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\twhite-space: nowrap;\n\t\t}\n\n\t\t/* 新增发布时间样式 */\n\t\t.publish-time {\n\t\t\tfont-size: 22rpx;\n\t\t\tcolor: #999;\n\t\t\tmargin-top: 8rpx;\n\t\t}\n\t}\n\n\t// 底部tab\n\t.bottom_tab {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\t/* 垂直居中 */\n\t\tgap: 8px;\n\t\t/* 元素间距 */\n\t\tpadding: 10px;\n\t\tbox-sizing: border-box;\n\t\tleft: 0px;\n\t\tposition: fixed;\n\t\tbottom: 0px;\n\t\tz-index: 100;\n\t\twidth: 100vw;\n\t\tbackground: #fff;\n\n\t\t.replyInfo {\n\t\t\tflex-shrink: 0;\n\t\t\t/* 禁止缩小 */\n\t\t\tmax-width: 50px;\n\t\t\t/* 最大宽度限制 */\n\t\t\toverflow: hidden;\n\t\t\ttext-overflow: ellipsis;\n\t\t\twhite-space: nowrap;\n\t\t\tflex-shrink: 0;\n\t\t\tmax-width: 50px;\n\t\t\tmargin-right: 8px;\n\t\t}\n\n\t\t.comment_input {\n\t\t\tflex: 1;\n\t\t\t/* 占据剩余空间 */\n\t\t\tmin-width: 0;\n\t\t\t/* 允许缩小 */\n\t\t\tflex: 1;\n\t\t\tmargin-right: 8px;\n\t\t\theight: 30px;\n\t\t\tborder-radius: 5px;\n\t\t\tmin-height: 30px;\n\t\t\tpadding: 8px;\n\t\t\tbackground: #f2f2f2;\n\t\t\tfont-size: 30rpx;\n\t\t}\n\n\t\tbutton {\n\t\t\tflex-shrink: 0;\n\t\t\t/* 固定宽度 */\n\t\t\twidth: 90px;\n\t\t\t/* 按钮固定宽度 */\n\t\t\tbackground: rgb(100, 198, 220);\n\t\t\tborder-radius: 10px;\n\t\t\twidth: 90px;\n\t\t\tcolor: rgb(255, 255, 255);\n\t\t\tfont-size: 14px;\n\t\t}\n\n\t\tuni-button:after {\n\t\t\tborder: none;\n\t\t}\n\t}\n\n\tuni-button:after {\n\t\tborder: none;\n\t}\n\n\t.load_more {\n\t\tbackground: #fff;\n\t\tcolor: #d6d6d6;\n\t\tfont-size: 13px;\n\t\tmargin-top: 15px;\n\n\t\t&::after {\n\t\t\tborder: none;\n\t\t}\n\t}\n\n\ttext {\n\t\tfont-size: 22rpx;\n\t}\n\n\t.about {\n\t\tfont-size: 12px;\n\t\tcolor: rgb(136, 136, 136);\n\t\tmargin: 0.625rem 0.3125rem;\n\t\twidth: 100%;\n\t\ttext-align: center;\n\t\tdisplay: block;\n\t\tmargin-top: 0rpx;\n\t\tfont-weight: 800;\n\t}\n\n\t// 遮罩层\n\t.mask {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tbackground: #fff;\n\t\topacity: 0;\n\t\tz-index: 99;\n\t\twidth: 100vw;\n\t\theight: 100vh;\n\t}\n</style>","import MiniProgramPage from '/Users/sapphirell/Documents/git/dogdogdoll-uniapp/pages/collocation_share/collocation_share.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","websiteUrl","global","_a","_b","onShow","onLoad","asyncGetUserInfo"],"mappings":"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"}
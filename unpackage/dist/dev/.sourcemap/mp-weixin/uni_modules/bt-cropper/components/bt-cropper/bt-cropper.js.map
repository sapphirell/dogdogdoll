{"version":3,"file":"bt-cropper.js","sources":["uni_modules/bt-cropper/components/bt-cropper/bt-cropper.vue","/Users/sapphirell/Documents/git/dogdogdoll-uniapp/uni_modules/bt-cropper/components/bt-cropper/bt-cropper.vue?type=component"],"sourcesContent":["<template>\r\n\t<view class=\"bt-container\" :style=\"[containerStyle]\">\r\n\t\t<!-- #ifdef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t<view class=\"mainContent\" data-type=\"image\" @touchstart=\"wxsModule.touchStart\" @touchmove=\"wxsModule.touchMove\" @touchend=\"wxsModule.touchEnd\">\r\n\t\t<!-- #endif -->\r\n\t\t<!-- #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t<view class=\"mainContent\" data-type=\"image\" @touchstart=\"touchStart\" @touchmove=\"touchMove\" @touchend=\"touchEnd\">\r\n\t\t<!-- #endif -->\r\n\t\t\t<template v-if=\"imageRect && cropperRect\">\r\n\t\t\t\t<!-- #ifdef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t\t\t<image mode=\"aspectFit\" :src=\"imageSrc\" class=\"image\" :rotateAngle=\"rotateAngle\" :change:rotateAngle=\"wxsModule.changeRotateAngle\" :change:imageRect=\"wxsModule.changeImageRect\" :imageRect=\"imageRect\" :class=\"{ anim }\">\r\n\t\t\t\t<!-- #endif -->\r\n\t\t\t\t<!-- #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t\t\t<image mode=\"aspectFit\" :src=\"imageSrc\" class=\"image\" :style=\"[imageStyle]\" :class=\"{ anim }\">\r\n\t\t\t\t<!-- #endif -->\r\n\t\t\t\t</image>\r\n\t\t\t\t<!-- #ifdef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t\t\t<view class=\"cropper\" :class=\"{ anim }\" :change:cropperRect=\"wxsModule.changeCropper\" :cropperRect=\"cropperRect\" :change:ratio=\"wxsModule.changeRatio\" :ratio=\"ratio\" >\r\n\t\t\t\t<!-- #endif -->\r\n\t\t\t\t<!-- #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n\t\t\t\t<view class=\"cropper\" :class=\"{ anim }\"  :style=\"[cropperStyle]\">\r\n\t\t\t\t<!-- #endif -->\r\n\t\t\t\t\t<image class=\"mask\" :src=\"mask\"></image>\r\n\t\t\t\t\t<template v-if=\"showGrid\">\r\n\t\t\t\t\t\t<view class=\"line row row1\"></view>\r\n\t\t\t\t\t\t<view class=\"line row row2\"></view>\r\n\t\t\t\t\t\t<view class=\"line col col1\"></view>\r\n\t\t\t\t\t\t<view class=\"line col col2\"></view>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<!-- #ifdef APP-VUE || MP-WEIXIN || MP-QQ || H5  -->\r\n\t\t\t\t\t<view class=\"controller vertical left\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller vertical right\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller horizon top\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller horizon bottom\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller left top\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller left bottom\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller right top\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<view class=\"controller right bottom\" @touchstart=\"wxsModule.touchStart\" data-type=\"controller\" />\r\n\t\t\t\t\t<!-- #endif -->\r\n\t\t\t\t\t<!-- #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5  -->\r\n\t\t\t\t\t<view class=\"controller vertical left\" @touchstart.stop=\"touchStart(-1, 0, $event)\" />\r\n\t\t\t\t\t<view class=\"controller vertical right\" @touchstart.stop=\"touchStart(1, 0, $event)\" />\r\n\t\t\t\t\t<view class=\"controller horizon top\" @touchstart.stop=\"touchStart(0, -1, $event)\" />\r\n\t\t\t\t\t<view class=\"controller horizon bottom\" @touchstart.stop=\"touchStart(0, 1, $event)\" />\r\n\t\t\t\t\t<view class=\"controller left top\" @touchstart.stop=\"touchStart(-1, -1, $event)\" />\r\n\t\t\t\t\t<view class=\"controller left bottom\" @touchstart.stop=\"touchStart(-1, 1, $event)\" />\r\n\t\t\t\t\t<view class=\"controller right top\" @touchstart.stop=\"touchStart(1, -1, $event)\" />\r\n\t\t\t\t\t<view class=\"controller right bottom\" @touchstart.stop=\"touchStart(1, 1, $event)\" />\r\n\t\t\t\t\t<!-- #endif -->\r\n\t\t\t\t</view>\r\n\t\t\t</template>\r\n\t\t</view>\r\n\t\t\t<canvas v-if=\"type2d\" type=\"2d\" class=\"bt-canvas\" :width=\"target.width\" :height=\"target.height\"></canvas>\r\n\t\t\t<canvas\r\n\t\t\t\tv-else\r\n\t\t\t\t:canvas-id=\"canvasId\"\r\n\t\t\t\tclass=\"bt-canvas\"\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\twidth: target.width + 'px',\r\n\t\t\t\t\theight: target.height + 'px'\r\n\t\t\t\t}\"\r\n\t\t\t\t:width=\"target.width * pixel\"\r\n\t\t\t\t:height=\"target.height * pixel\"\r\n\t\t\t></canvas>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n// #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5\r\nimport touches from './js/touchs.js';\r\n// #endif\r\nimport { parseUnit,sleep } from './utils/tools.js';\r\n/**\r\n * better-cropper 图片裁切插件\r\n */\r\nexport default {\r\n\tname: 'bt-cropper',\r\n\tprops: {\r\n\t\t// 图片路径，支持网络路径和本地路径\r\n\t\timageSrc: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: '',\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tmask: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\t// 手动指定容器的大小\r\n\t\tcontainerSize: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\t// 输出图片的格式，默认jpg\r\n\t\tfileType: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'png'\r\n\t\t},\r\n\t\t// 生成的图片的宽度,不传或者传0表示按照原始分辨率裁切\r\n\t\tdWidth: Number,\r\n\t\tmaxWidth: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 2000\r\n\t\t},\r\n\t\t// 裁切比例，0表示自由\r\n\t\tratio: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 0,\r\n\t\t\tvalidator(value) {\r\n\t\t\t\tif (typeof value === 'number') {\r\n\t\t\t\t\tif (value < 0) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 旋转角度\r\n\t\trotate: Number,\r\n\t\t// 是否展示网格\r\n\t\tshowGrid: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\t// 图片质量，0-1 越大质量越好\r\n\t\tquality: {\r\n\t\t\ttype: Number,\r\n\t\t\tdefault: 1\r\n\t\t},\r\n\t\tcanvas2d: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\t// 初始的图片位置\r\n\t\tinitPosition: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault() {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 是否开启操作结束后自动放大\r\n\t\tautoZoom: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true\r\n\t\t}\r\n\t},\r\n\t// #ifndef APP-VUE || MP-WEIXIN || MP-QQ || H5\r\n\tmixins: [touches],\r\n\t// #endif\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tcanvasId: 'bt-cropper',\r\n\t\t\tcontainerRect: null,\r\n\t\t\timageInfo: null,\r\n\t\t\toperationHistory: [],\r\n\t\t\toperationIndex: 0,\r\n\t\t\tanim: false,\r\n\t\t\ttimer: null,\r\n\t\t\t// 是否使用2D canvas\r\n\t\t\ttype2d: false,\r\n\t\t\tpixel: 1,\r\n\t\t\timageRect: null,\r\n\t\t\tcropperRect: null,\r\n\t\t\ttarget:{\r\n\t\t\t\twidth:0,\r\n\t\t\t\theight:0\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\twatch: {\r\n\t\timageSrc: {\r\n\t\t\thandler(src) {\r\n\t\t\t\tif (typeof src === 'string' && src !== '') {\r\n\t\t\t\t\tthis.imageInit(src);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.imageInfo = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\timmediate: true\r\n\t\t},\r\n\t\tratio() {\r\n\t\t\tif (this.ratio != 0) {\r\n\t\t\t\tthis.startAnim();\r\n\t\t\t\tthis.init();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tcontainerStyle() {\r\n\t\t\tif (this.containerSize && this.containerRect) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\twidth: this.containerRect.width + 'px',\r\n\t\t\t\t\theight: this.containerRect.height + 'px'\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn {};\r\n\t\t},\r\n\t\trotateAngle(){\r\n\t\t\tconst angel = Number(this.rotate)\r\n\t\t\tif(isNaN(angel)){\r\n\t\t\t\treturn 0\r\n\t\t\t}else{\r\n\t\t\t\treturn angel % 360\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tstartAnim() {\r\n\t\t\tthis.stopAnim();\r\n\t\t\tthis.anim = true;\r\n\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\tthis.anim = false;\r\n\t\t\t}, 200);\r\n\t\t},\r\n\t\tstopAnim() {\r\n\t\t\tthis.anim = false;\r\n\t\t\tclearTimeout(this.timer);\r\n\t\t},\r\n\t\timageInit(src) {\r\n\t\t\tuni.showLoading({\r\n\t\t\t\ttitle: '载入中...'\r\n\t\t\t});\r\n\t\t\tuni.getImageInfo({\r\n\t\t\t\tsrc,\r\n\t\t\t\tsuccess: res => {\r\n\t\t\t\t\tthis.imageInfo = res;\r\n\t\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\t\tthis.getContainer().then(rect => {\r\n\t\t\t\t\t\t\tthis.containerRect = rect;\r\n\t\t\t\t\t\t\tthis.init();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tfail: (err) => {\r\n\t\t\t\t\tthis.$emit('loadFail',err);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '图片下载失败!',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\tcomplete(res) {\r\n\t\t\t\t\tuni.hideLoading();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\tinitCropper() {\r\n\t\t\tconst imageRate = this.imageInfo.width / this.imageInfo.height;\r\n\t\t\tconst containerRate = this.containerRect.width / this.containerRect.height;\r\n\t\t\tconst imageRect = {};\r\n\t\t\tlet cropperRate = this.ratio;\r\n\t\t\tif (cropperRate == 0) {\r\n\t\t\t\tif (this.cropperRect) {\r\n\t\t\t\t\tcropperRate = this.cropperRect.width / this.cropperRect.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcropperRate = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst cropperRect = {};\r\n\t\t\tif (containerRate > cropperRate) {\r\n\t\t\t\tcropperRect.height = this.containerRect.height * 0.85;\r\n\t\t\t\tcropperRect.width = cropperRect.height * cropperRate;\r\n\t\t\t} else {\r\n\t\t\t\tcropperRect.width = this.containerRect.width * 0.85;\r\n\t\t\t\tcropperRect.height = cropperRect.width / cropperRate;\r\n\t\t\t}\r\n\t\t\tif (cropperRate > imageRate) {\r\n\t\t\t\timageRect.width = cropperRect.width;\r\n\t\t\t\timageRect.height = imageRect.width / imageRate;\r\n\t\t\t} else {\r\n\t\t\t\timageRect.height = cropperRect.height;\r\n\t\t\t\timageRect.width = imageRect.height * imageRate;\r\n\t\t\t}\r\n\t\t\timageRect.left = (this.containerRect.width - imageRect.width) / 2;\r\n\t\t\timageRect.top = (this.containerRect.height - imageRect.height) / 2;\r\n\t\t\tcropperRect.left = imageRect.left + (imageRect.width - cropperRect.width) / 2;\r\n\t\t\tcropperRect.top = imageRect.top + (imageRect.height - cropperRect.height) / 2;\r\n\t\t\treturn {\r\n\t\t\t\timageRect,\r\n\t\t\t\tcropperRect\r\n\t\t\t};\r\n\t\t},\r\n\t\tinit() {\r\n\t\t\tconst {imageRect,cropperRect} = this.initCropper()\r\n\t\t\tif(this.initPosition){\r\n\t\t\t\tconst scale = this.imageInfo.width/imageRect.width;\r\n\t\t\t\tconst {left,top,width,height} = this.initPosition;\r\n\t\t\t\tif(left!==undefined&&top!==undefined&&width!==undefined&&height!==undefined){\r\n\t\t\t\t\tcropperRect.width = width/scale;\r\n\t\t\t\t\tcropperRect.height = height/scale;\r\n\t\t\t\t\tcropperRect.left = left/scale;\r\n\t\t\t\t\tcropperRect.top = top/scale;\r\n\t\t\t\t\tthis.$nextTick(this.zoomToFill);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.imageRect = imageRect\r\n\t\t\tthis.cropperRect = cropperRect\r\n\t\t\tthis.operationHistory = [{imageRect,cropperRect}];\r\n\t\t\tthis.operationIndex = 0;\r\n\t\t\tthis.setTarget();\r\n\t\t\t// #ifdef MP-WEIXIN\r\n\t\t\tconst systemInfo = uni.getSystemInfoSync();\r\n\t\t\tif (this.canvas2d === false || systemInfo.platform === 'windows' || systemInfo.platform === 'mac') {\r\n\t\t\t\tthis.type2d = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.type2d = true;\r\n\t\t\t\tthis.pixel = systemInfo.pixelRatio;\r\n\t\t\t}\r\n\t\t\t// #endif\r\n\t\t\t//非微信小程序端强制关闭canvas2d模式\r\n\t\t\t// #ifndef MP-WEIXIN\r\n\t\t\tthis.type2d = false;\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef  MP-TOUTIAO || MP-LARK || MP-ALIPAY\r\n\t\t\tthis.type2d = this.canvas2d;\r\n\t\t\t// #endif\r\n\t\t},\r\n\t\t// 设置目标图像的大小\r\n\t\tsetTarget(){\r\n\t\t\tconst ratio = this.cropperRect.width / this.cropperRect.height;\r\n\t\t\tif (!!this.dWidth) {\r\n\t\t\t\tthis.target = {\r\n\t\t\t\t\twidth: this.dWidth,\r\n\t\t\t\t\theight: this.dWidth / (ratio || 1)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst width = Math.min(this.maxWidth, this.cropperRect.width * (this.imageInfo.width / this.imageRect.width));\r\n\t\t\t\tthis.target = {\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight: width / (ratio || 1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\taddHistory({imageRect,cropperRect}){\r\n\t\t\tif(this.operationIndex!==this.operationHistory.length-1){\r\n\t\t\t\tthis.operationHistory = this.operationHistory.slice(0,this.operationIndex)\r\n\t\t\t}\r\n\t\t\tthis.operationHistory.push({\r\n\t\t\t\timageRect,\r\n\t\t\t\tcropperRect\r\n\t\t\t});\r\n\t\t\tif (this.operationHistory.length > 10) {\r\n\t\t\t\tthis.operationHistory.shift();\r\n\t\t\t}\r\n\t\t\tthis.operationIndex = this.operationHistory.length - 1;\r\n\t\t},\r\n\t\tupdateData(data) {\r\n\t\t\tthis.imageRect = data.imageRect\r\n\t\t\tthis.cropperRect = data.cropperRect\r\n\t\t\tthis.addHistory(data);\r\n\t\t\tthis.setTarget();\r\n\t\t\tif (this.autoZoom) {\r\n\t\t\t\tthis.timer = setTimeout(() => {\r\n\t\t\t\t\tthis.zoomToFill();\r\n\t\t\t\t}, 600);\r\n\t\t\t}\r\n\t\t\tconst {imageRect,cropperRect} = data\r\n\t\t\tconst scale = imageRect.width/this.imageInfo.width\r\n\t\t\tthis.$emit('change', {\r\n\t\t\t\tleft: (cropperRect.left - imageRect.left) /scale,\r\n\t\t\t\ttop: (cropperRect.top - imageRect.top) / scale,\r\n\t\t\t\twidth: cropperRect.width / scale,\r\n\t\t\t\theight: cropperRect.height / scale\r\n\t\t\t});\r\n\t\t},\r\n\t\tgetContainer() {\r\n\t\t\tif (this.containerSize !== null && typeof this.containerSize == 'object') {\r\n\t\t\t\tconst { width, height } = this.containerSize;\r\n\t\t\t\treturn Promise.resolve({\r\n\t\t\t\t\twidth: parseUnit(width),\r\n\t\t\t\t\theight: parseUnit(height)\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn new Promise(resolve => {\r\n\t\t\t\t\tconst query = uni.createSelectorQuery().in(this);\r\n\t\t\t\t\tquery\r\n\t\t\t\t\t\t.select('.mainContent')\r\n\t\t\t\t\t\t.boundingClientRect(rect => {\r\n\t\t\t\t\t\t\tresolve(rect);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.exec();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tzoomToFill() {\r\n\t\t\tthis.startAnim();\r\n\t\t\tconst beforeCropper = {\r\n\t\t\t\t...this.cropperRect\r\n\t\t\t};\r\n\t\t\tconst operation = {\r\n\t\t\t\timageRect:this.imageRect,\r\n\t\t\t\tcropperRect:this.cropperRect\r\n\t\t\t};\r\n\t\t\tthis.cropperRect = this.initCropper().cropperRect;\r\n\t\t\tconst scale = this.cropperRect.width / beforeCropper.width;\r\n\t\t\tconst ox = beforeCropper.left - this.imageRect.left;\r\n\t\t\tconst oy = beforeCropper.top - this.imageRect.top;\r\n\t\t\tthis.imageRect = {\r\n\t\t\t\twidth: this.imageRect.width * scale,\r\n\t\t\t\theight: this.imageRect.height * scale,\r\n\t\t\t\tleft: this.imageRect.left + (this.cropperRect.left - beforeCropper.left) - (scale - 1) * ox,\r\n\t\t\t\ttop: this.imageRect.top + (this.cropperRect.top - beforeCropper.top) - (scale - 1) * oy\r\n\t\t\t};\r\n\t\t},\r\n\t\tonTouchStart() {\r\n\t\t\tthis.stopAnim();\r\n\t\t},\r\n\t\t// 撤销\r\n\t\tundo() {\r\n\t\t\tif (this.operationIndex > 0) {\r\n\t\t\t\tthis.operationIndex--;\r\n\t\t\t\tthis.imageRect = this.operationHistory[this.operationIndex].imageRect;\r\n\t\t\t\tthis.cropperRect = this.operationHistory[this.operationIndex].cropperRect;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t// 重做\r\n\t\tresume() {\r\n\t\t\tif (this.operationIndex < this.operationHistory.length - 1) {\r\n\t\t\t\tthis.operationIndex++;\r\n\t\t\t\tthis.imageRect = this.operationHistory[this.operationIndex].imageRect;\r\n\t\t\t\tthis.cropperRect = this.operationHistory[this.operationIndex].cropperRect;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tasync drawImage(ctx,image,x,y,w,h){\r\n\t\t\tif (this.type2d) {\r\n\t\t\t\tawait new Promise(resolve => (image.onload = resolve));\r\n\t\t\t\tctx.drawImage(image, x * this.pixel, y * this.pixel, w * this.pixel, h * this.pixel);\r\n\t\t\t} else {\r\n\t\t\t\tconst path = await new Promise((resolve)=>{\r\n\t\t\t\t\tuni.getImageInfo({\r\n\t\t\t\t\t\tsrc:image,\r\n\t\t\t\t\t\tsuccess({path}){\r\n\t\t\t\t\t\t\tresolve(path)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tctx.drawImage(path, x * this.pixel, y * this.pixel, w * this.pixel, h * this.pixel);\r\n\t\t\t\tawait new Promise((resolve) => ctx.draw(false,resolve));\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync crop() {\r\n\t\t\tlet ctx;\r\n\t\t\tlet canvas;\r\n\t\t\tthis.$emit('cropStart')\r\n\t\t\tthis.setTarget()\r\n\t\t\tif (this.type2d) {\r\n\t\t\t\tconst query = uni.createSelectorQuery().in(this);\r\n\t\t\t\tcanvas = await new Promise(resolve =>\r\n\t\t\t\t\tquery\r\n\t\t\t\t\t\t.select('.bt-canvas')\r\n\t\t\t\t\t\t.node(({ node }) => resolve(node))\r\n\t\t\t\t\t\t.exec()\r\n\t\t\t\t);\r\n\t\t\t\tcanvas.width = this.target.width * this.pixel;\r\n\t\t\t\tcanvas.height = this.target.height * this.pixel;\r\n\t\t\t\tctx = canvas.getContext('2d');\r\n\t\t\t\t// #ifdef MP-TOUTIAO\r\n\t\t\t\tif(this.type2d){\r\n\t\t\t\t\tconsole.warn(\"请注意：目前头条系小程序暂时无法使用2d canvas保存图片，建议换成V1版本\")\r\n\t\t\t\t}\r\n\t\t\t\t// #endif\r\n\t\t\t} else {\r\n\t\t\t\tctx = uni.createCanvasContext(this.canvasId,this);\r\n\t\t\t}\r\n\t\t\tconst scale = this.cropperRect.width / this.target.width;\r\n\t\t\tconst dx = (this.cropperRect.left - this.imageRect.left) / scale;\r\n\t\t\tconst dy = (this.cropperRect.top - this.imageRect.top) / scale;\r\n\t\t\tlet image;\r\n\t\t\tif(this.type2d){\r\n\t\t\t\timage = canvas.createImage()\r\n\t\t\t\timage.src = this.imageSrc;\r\n\t\t\t}else{\r\n\t\t\t\timage = this.imageSrc;\r\n\t\t\t}\r\n\t\t\tconst x = -dx,\r\n\t\t\t\ty = -dy,\r\n\t\t\t\tw = this.imageRect.width / scale,\r\n\t\t\t\th = this.imageRect.height / scale;\r\n\t\t\tctx.save();\r\n\t\t\tctx.translate(x + w / 2, y + h / 2);\r\n\t\t\tctx.rotate((this.rotateAngle * Math.PI) / 180);\r\n\t\t\tctx.translate(-(x + w / 2), -(y + h / 2));\r\n\t\t\tawait this.drawImage(ctx,image, x, y, w, h);\r\n\t\t\tctx.restore();\r\n\t\t\tif (this.mask !== '') {\r\n\t\t\t\tlet imageData;\r\n\t\t\t\tif (this.type2d) {\r\n\t\t\t\t\timageData = ctx.getImageData(0, 0, this.target.width, this.target.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\timageData = await new Promise(resolve => {\r\n\t\t\t\t\t\tuni.canvasGetImageData({\r\n\t\t\t\t\t\t\tcanvasId: this.canvasId,\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth: this.target.width,\r\n\t\t\t\t\t\t\theight: this.target.height,\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},this);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tctx.clearRect(0, 0, this.target.width, this.target.height);\r\n\t\t\t\tif(this.type2d){\r\n\t\t\t\t\timage.src = this.mask;\r\n\t\t\t\t}else{\r\n\t\t\t\t\timage = this.mask;\r\n\t\t\t\t}\r\n\t\t\t\tawait this.drawImage(ctx,image, 0, 0, this.target.width, this.target.height);\r\n\t\t\t\tlet maskData;\r\n\t\t\t\tif (this.type2d) {\r\n\t\t\t\t\tmaskData = ctx.getImageData(0, 0, this.target.width, this.target.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmaskData = await new Promise((resolve,reject) => {\r\n\t\t\t\t\t\tuni.canvasGetImageData({\r\n\t\t\t\t\t\t\tcanvasId: this.canvasId,\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth: this.target.width,\r\n\t\t\t\t\t\t\theight: this.target.height,\r\n\t\t\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},this);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tctx.clearRect(0, 0, this.target.width, this.target.height);\r\n\t\t\t\tfor (let index = 3; index < maskData.data.length; index += 4) {\r\n\t\t\t\t\tconst alpha = maskData.data[index];\r\n\t\t\t\t\tif (alpha !== 0) {\r\n\t\t\t\t\t\timageData.data[index] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.type2d) {\r\n\t\t\t\t\tctx.putImageData(imageData, 0, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tawait new Promise(resolve => {\r\n\t\t\t\t\t\tuni.canvasPutImageData({\r\n\t\t\t\t\t\t\tcanvasId: this.canvasId,\r\n\t\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\t\twidth: imageData.width,\r\n\t\t\t\t\t\t\theight: imageData.height,\r\n\t\t\t\t\t\t\tdata: imageData.data,\r\n\t\t\t\t\t\t\tcomplete: res => {\r\n\t\t\t\t\t\t\t\tresolve(res);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},this);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn new Promise((resolve,reject) => {\r\n\t\t\t\tconst params = {};\r\n\t\t\t\tif (this.type2d) {\r\n\t\t\t\t\tparams.canvas = canvas;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparams.canvasId = this.canvasId;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t\t...params,\r\n\t\t\t\t\tdestWidth: this.target.width,\r\n\t\t\t\t\tdestHeight: this.target.height,\r\n\t\t\t\t\tquality: Number(this.quality) || 1,\r\n\t\t\t\t\tfileType: this.fileType,\r\n\t\t\t\t\tsuccess: ({ tempFilePath }) => {\r\n\t\t\t\t\t\t// #ifdef H5\r\n\t\t\t\t\t\tvar arr = tempFilePath.split(',');\r\n\t\t\t\t\t\tvar mime = arr[0].match(/:(.*?);/)[1];\r\n\t\t\t\t\t\tvar bstr = atob(arr[1]);\r\n\t\t\t\t\t\tvar n = bstr.length;\r\n\t\t\t\t\t\tvar u8arr = new Uint8Array(n);\r\n\t\t\t\t\t\tfor (var i = 0; i < n; i++) {\r\n\t\t\t\t\t\t\tu8arr[i] = bstr.charCodeAt(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar url = URL || webkitURL;\r\n\t\t\t\t\t\tresolve(\r\n\t\t\t\t\t\t\turl.createObjectURL(\r\n\t\t\t\t\t\t\t\tnew Blob([u8arr], {\r\n\t\t\t\t\t\t\t\t\ttype: mime\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t// #endif\r\n\t\t\t\t\t\tresolve(tempFilePath);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail(err) {\r\n\t\t\t\t\t\tconsole.log('保存失败，错误信息：',err);\r\n\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t},this);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n<!-- #ifdef APP-VUE || MP-WEIXIN || MP-QQ || H5 -->\r\n<script module=\"wxsModule\" lang=\"wxs\">\r\nvar startTouchs = [];\r\nvar startDistance = 0;\r\nvar touchCenter = [];\r\nvar ratio = 0;\r\nvar imageInstance = null;\r\nvar cropperInstance = null;\r\nvar touchType = \"\";\r\nvar touchInstance = null;\r\nvar cropperRect = null;\r\nvar imageRect = null;\r\n// 旋转角度\r\nvar rotateAngle = 0;\r\n// 操作时改变的对象\r\nvar changes = {\r\n\timageRect: null,\r\n\tcropperRect: null\r\n}\r\n\r\nfunction updateImageStyle() {\r\n\tvar imageRect = changes.imageRect\r\n\timageInstance.setStyle({\r\n\t\tleft: imageRect.left + 'px',\r\n\t\ttop: imageRect.top + 'px',\r\n\t\twidth: imageRect.width + 'px',\r\n\t\theight: imageRect.height + 'px',\r\n\t\ttransform: 'rotate(' + rotateAngle + 'deg)'\r\n\t})\r\n}\r\n\r\nfunction updateCopperStyle() {\r\n\tvar cropperRect = changes.cropperRect\r\n\tcropperInstance.setStyle({\r\n\t\tleft: cropperRect.left + \"px\",\r\n\t\ttop: cropperRect.top + \"px\",\r\n\t\twidth: cropperRect.width + \"px\",\r\n\t\theight: cropperRect.height + \"px\"\r\n\t})\r\n}\r\n\r\nfunction imageScale(scaleRate) {\r\n\tvar cw = imageRect.width * (scaleRate - 1)\r\n\tvar ch = imageRect.height * (scaleRate - 1)\r\n\tchanges.imageRect = {\r\n\t\twidth: imageRect.width + cw,\r\n\t\theight: imageRect.height + ch,\r\n\t\tleft: imageRect.left - cw * (touchCenter[0]),\r\n\t\ttop: imageRect.top - ch * (touchCenter[1])\r\n\t}\r\n}\r\nfunction getImageRotateSizeChange(w,h){\r\n\tvar cw = h*Math.sin(rotateAngle/180 * Math.PI)\r\n\tvar ch = w*Math.sin(rotateAngle/180 * Math.PI)\r\n\treturn {cw,ch}\r\n}\r\n// 角度转弧度\r\nfunction ang2deg(ang){\r\n\treturn ang/180*Math.PI\r\n}\r\n// 计算旋转后真实的图片大小\r\nfunction getRealSize(){\r\n\tvar w = changes.imageRect.width\r\n\tvar h = changes.imageRect.height\r\n\tvar l =  changes.imageRect.left\r\n\tvar t =  changes.imageRect.top\r\n\t// 内斜边\r\n\tvar R = Math.sqrt(w*w+h*h)\r\n\tvar angle = Math.atan(h/w) / Math.PI * 180\r\n\tvar rorate = rotateAngle%90\r\n\tvar direct = Math.floor(rotateAngle/90)\r\n\tvar width = R*Math.cos(ang2deg(angle-rorate))\r\n\tvar height = R*Math.sin(ang2deg(angle+rorate))\r\n\tif(direct % 2 === 1){\r\n\t\tvar temp = width\r\n\t\twidth = height\r\n\t\theight = temp\r\n\t}\r\n\treturn {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tleft: l - (width - w)/2,\r\n\t\ttop: t - (height - h)/2,\r\n\t\tdw: width - w,\r\n\t\tdh: height - h\r\n\t}\r\n}\r\nmodule.exports = {\r\n\ttouchStart: function (ev, oi) {\r\n\t\t// #ifdef APP-PLUS || H5\r\n\t\tev.preventDefault();\r\n\t\tev.stopPropagation();\r\n\t\t// #endif\r\n\t\ttouchInstance = ev.instance;\r\n\t\tvar dataSet = ev.instance.getDataset()\r\n\t\ttouchType = dataSet.type;\r\n\t\tstartTouchs = ev.touches;\r\n\t\toi.callMethod('onTouchStart')\r\n\t\tif (startTouchs.length == 2) {\r\n\t\t\ttouchType = \"image\"\r\n\t\t\tvar x1 = startTouchs[0].clientX\r\n\t\t\tvar y1 = startTouchs[0].clientY\r\n\t\t\tvar x2 = startTouchs[1].clientX\r\n\t\t\tvar y2 = startTouchs[1].clientY\r\n\t\t\tvar distance = Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)\r\n\t\t\tstartDistance = Math.sqrt(distance)\r\n\t\t\tvar leftPercent = ((x1 + x2) / 2 - imageRect.left) / imageRect.width\r\n\t\t\tvar topPercent = ((y1 + y2) / 2 - imageRect.top) / imageRect.height\r\n\t\t\ttouchCenter = [leftPercent, topPercent]\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\ttouchMove: function (ev, io) {\r\n\t\tif (touchType == \"\") return false\r\n\t\t// #ifdef H5\r\n\t\tev.preventDefault();\r\n\t\tev.stopPropagation();\r\n\t\t// #endif\r\n\t\tvar touches = ev.touches;\r\n\t\tvar changeX1 = touches[0].clientX - startTouchs[0].clientX;\r\n\t\tvar changeY1 = touches[0].clientY - startTouchs[0].clientY;\r\n\t\tif (startTouchs.length == 1) {\r\n\t\t\tif (touchType === 'image') {\r\n\t\t\t\tchanges.imageRect.left = imageRect.left + changeX1;\r\n\t\t\t\tchanges.imageRect.top = imageRect.top + changeY1;\r\n\t\t\t\tupdateImageStyle()\r\n\t\t\t} else if (touchType === 'controller') {\r\n\t\t\t\tvar directionX = 0;\r\n\t\t\t\tif (touchInstance.hasClass('left')) {\r\n\t\t\t\t\tdirectionX = -1;\r\n\t\t\t\t}\r\n\t\t\t\tif (touchInstance.hasClass('right')) {\r\n\t\t\t\t\tdirectionX = 1;\r\n\t\t\t\t}\r\n\t\t\t\tvar directionY = 0;\r\n\t\t\t\tif (touchInstance.hasClass('top')) {\r\n\t\t\t\t\tdirectionY = -1\r\n\t\t\t\t}\r\n\t\t\t\tif (touchInstance.hasClass('bottom')) {\r\n\t\t\t\t\tdirectionY = 1\r\n\t\t\t\t}\r\n\t\t\t\tvar changeX = changeX1 * directionX;\r\n\t\t\t\tvar changeY = changeY1 * directionY;\r\n\t\t\t\t// 比例缩放控制\r\n\t\t\t\tif (ratio !== 0) {\r\n\t\t\t\t\tif (directionX * directionY !== 0) {\r\n\t\t\t\t\t\tif (changeX / ratio > changeY) {\r\n\t\t\t\t\t\t\tchangeY = changeX / ratio\r\n\t\t\t\t\t\t\tchangeX = changeY * ratio\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchangeX = changeY * ratio\r\n\t\t\t\t\t\t\tchangeY = changeX / ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (directionX == 0) {\r\n\t\t\t\t\t\t\tchangeX = changeY * ratio\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchangeY = changeX / ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar realSize = getRealSize()\r\n\t\t\t\tvar width = cropperRect.width + changeX\r\n\t\t\t\tvar height = cropperRect.height + changeY\r\n\t\t\t\t// var imageRight = imageRect.left + imageRect.width\r\n\t\t\t\t// var imageBottom = imageRect.top + imageRect.height\r\n\t\t\t\tvar imageRight = realSize.left+realSize.width\r\n\t\t\t\tvar imageBottom = realSize.top+realSize.height\r\n\t\t\t\tif (directionX != -1) {\r\n\t\t\t\t\tif (cropperRect.left + width > imageRight) {\r\n\t\t\t\t\t\twidth = imageRight - cropperRect.left\r\n\t\t\t\t\t\tif (ratio !== 0) {\r\n\t\t\t\t\t\t\theight = width / ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar cLeft = cropperRect.left - changeX\r\n\t\t\t\t\tif (cLeft < realSize.left) {\r\n\t\t\t\t\t\twidth = cropperRect.left + cropperRect.width - realSize.left\r\n\t\t\t\t\t\tif (ratio !== 0) {\r\n\t\t\t\t\t\t\theight = width / ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// 判断是否触底\r\n\t\t\t\tif (directionY != -1) {\r\n\t\t\t\t\tif (cropperRect.top + height > imageBottom) {\r\n\t\t\t\t\t\theight = imageBottom - cropperRect.top\r\n\t\t\t\t\t\tif (ratio !== 0) {\r\n\t\t\t\t\t\t\twidth = height * ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar cTop = cropperRect.top - changeY\r\n\t\t\t\t\tif (cTop < realSize.top) {\r\n\t\t\t\t\t\theight = cropperRect.top + cropperRect.height - realSize.top\r\n\t\t\t\t\t\tif (ratio !== 0) {\r\n\t\t\t\t\t\t\twidth = height * ratio\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (directionX == -1) {\r\n\t\t\t\t\tchanges.cropperRect.left = cropperRect.left + cropperRect.width - width\r\n\t\t\t\t}\r\n\t\t\t\tif (directionY == -1) {\r\n\t\t\t\t\tchanges.cropperRect.top = cropperRect.top + cropperRect.height - height\r\n\t\t\t\t}\r\n\t\t\t\t// 边界控制\r\n\t\t\t\tchanges.cropperRect.width = width\r\n\t\t\t\tchanges.cropperRect.height = height\r\n\t\t\t\tupdateCopperStyle()\r\n\t\t\t}\r\n\t\t} else if (touches.length == 2 && startTouchs.length == 2) {\r\n\t\t\tvar changeX2 = touches[0].clientX - touches[1].clientX;\r\n\t\t\tvar changeY2 = touches[0].clientY - touches[1].clientY;\r\n\t\t\tvar distance = Math.pow(changeX2, 2) + Math.pow(changeY2, 2)\r\n\t\t\tdistance = Math.sqrt(distance)\r\n\t\t\t// 放大比例\r\n\t\t\tvar scaleRate = distance / startDistance\r\n\t\t\timageScale(scaleRate)\r\n\t\t\tupdateImageStyle()\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\ttouchEnd: function (ev, oi) {\r\n\t\tif (touchType === \"image\") {\r\n\t\t\tvar cropperLeft = cropperRect.left\r\n\t\t\tvar cropperRight = cropperRect.left + cropperRect.width\r\n\t\t\tvar cropperTop = cropperRect.top\r\n\t\t\tvar cropperBottom = cropperTop + cropperRect.height\r\n\t\t\tvar cropperRate = cropperRect.width / cropperRect.height\r\n\t\t\tvar realSize = getRealSize()\r\n\t\t\tvar rate = realSize.width / realSize.height\r\n\t\t\tif (realSize.width < cropperRect.width || realSize.height < cropperRect.height) {\r\n\t\t\t\tvar scale = 1\r\n\t\t\t\tif (rate < cropperRate) {\r\n\t\t\t\t\tscale = cropperRect.width / realSize.width\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscale = cropperRect.height / realSize.height\r\n\t\t\t\t}\r\n\t\t\t\timageRect.width = changes.imageRect.width\r\n\t\t\t\timageRect.height = changes.imageRect.height\r\n\t\t\t\timageScale(scale)\r\n\t\t\t}\r\n\t\t\t// 边界控制start\r\n\t\t\tif (cropperLeft < realSize.left) {\r\n\t\t\t\tchanges.imageRect.left = cropperLeft + realSize.dw/2\r\n\t\t\t}\r\n\t\t\tif (cropperRight > realSize.left + realSize.width) {\r\n\t\t\t\tchanges.imageRect.left = cropperRight - realSize.width + realSize.dw/2\r\n\t\t\t}\r\n\t\t\tif (cropperTop < realSize.top) {\r\n\t\t\t\tchanges.imageRect.top = cropperTop + realSize.dh/2\r\n\t\t\t}\r\n\t\t\tif (cropperBottom > realSize.top + realSize.height) {\r\n\t\t\t\tchanges.imageRect.top = cropperBottom - realSize.height + realSize.dh/2\r\n\t\t\t}\r\n\t\t\t// 边界控制end\r\n\t\t\tupdateImageStyle()\r\n\t\t}\r\n\t\toi.callMethod('updateData', {\r\n\t\t\tcropperRect: changes.cropperRect,\r\n\t\t\timageRect: changes.imageRect,\r\n\t\t})\r\n\t\ttouchType = \"\"\r\n\t\tstartTouchs = []\r\n\t\treturn false;\r\n\t},\r\n\t// 将逻辑层的图像变换同步过来\r\n\t// 裁剪比例变化\r\n\tchangeRatio: function (value) {\r\n\t\tratio = value\r\n\t},\r\n\tchangeRotateAngle:function (value){\r\n\t\trotateAngle = value;\r\n\t\tif(imageInstance){\r\n\t\t\tupdateImageStyle()\r\n\t\t}\r\n\t\tvar realSize = getRealSize()\r\n\t},\r\n\tchangeImageRect: function (value, oldValue, oi) {\r\n\t\tif (value) {\r\n\t\t\timageRect = value;\r\n\t\t\tchanges.imageRect = {\r\n\t\t\t\tleft: value.left,\r\n\t\t\t\ttop: value.top,\r\n\t\t\t\twidth: value.width,\r\n\t\t\t\theight: value.height\r\n\t\t\t};\r\n\t\t\t// #ifndef MP-WEIXIN || MP-QQ\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\timageInstance = oi.selectComponent('.mainContent > .image')\r\n\t\t\t\tupdateImageStyle();\r\n\t\t\t});\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef MP-WEIXIN || MP-QQ\r\n\t\t\timageInstance = oi.selectComponent('.mainContent > .image')\r\n\t\t\tupdateImageStyle();\r\n\t\t\t// #endif\r\n\t\t}\r\n\t},\r\n\tchangeCropper: function (value, oldValue, oi) {\r\n\t\tif (value) {\r\n\t\t\tcropperRect = value\r\n\t\t\tchanges.cropperRect = {\r\n\t\t\t\tleft: value.left,\r\n\t\t\t\ttop: value.top,\r\n\t\t\t\twidth: value.width,\r\n\t\t\t\theight: value.height\r\n\t\t\t}\r\n\t\t\t// #ifdef H5 || APP-VUE\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t// #endif\r\n\t\t\t\tcropperInstance = oi.selectComponent('.mainContent > .cropper')\r\n\t\t\t\tupdateCopperStyle()\r\n\t\t\t// #ifdef H5 || APP-VUE\r\n\t\t\t});\r\n\t\t\t// #endif\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n<!-- #endif -->\r\n<style lang=\"scss\" scoped>\r\n.bt-container {\r\n\t// display: flex;\r\n\t// flex-direction: column;\r\n\t// justify-content: space-between;\r\n\theight: 100%;\r\n\tbox-sizing: border-box;\r\n\t// background-color: #0e1319;\r\n\tposition: relative;\r\n\toverflow: hidden;\r\n\r\n\t.bt-canvas {\r\n\t\tposition: fixed;\r\n\t\tleft: 100%;\r\n\t\ttop: 0;\r\n\t}\r\n\r\n\t.mainContent {\r\n\t\t// flex: 1;\r\n\t\t// flex-shrink:0;\r\n\t\t// margin: 60rpx;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tposition: relative;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\t// touch-action: none;\r\n\r\n\t\t.image {\r\n\t\t\tposition: absolute;\r\n\t\t\t// will-change: transform;\r\n\t\t\t// transform-origin: center center;\r\n\t\t\twidth: 85%;\r\n\t\t\theight: 85%;\r\n\t\t\twill-change: left, top, width, height;\r\n\t\t}\r\n\r\n\t\t.controller {\r\n\t\t\tposition: absolute;\r\n\t\t\tz-index: 99;\r\n\t\t\tpadding: 10rpx;\r\n\t\t\t$offset: -20rpx;\r\n\r\n\t\t\t&::after {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tfilter: drop-shadow(0 0px 10rpx rgba(0, 0, 0, 0.3));\r\n\t\t\t}\r\n\r\n\t\t\t&.vertical {\r\n\t\t\t\ttop: calc(50% - 30rpx);\r\n\t\t\t}\r\n\r\n\t\t\t&.horizon {\r\n\t\t\t\tleft: calc(50% - 30rpx);\r\n\t\t\t}\r\n\r\n\t\t\t&.left {\r\n\t\t\t\t&::after {\r\n\t\t\t\t\theight: 40rpx;\r\n\t\t\t\t\tborder-left: 10rpx solid #fff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tleft: $offset;\r\n\t\t\t}\r\n\r\n\t\t\t&.right {\r\n\t\t\t\t&::after {\r\n\t\t\t\t\theight: 40rpx;\r\n\t\t\t\t\tborder-right: 10rpx solid #fff;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tright: $offset;\r\n\t\t\t}\r\n\r\n\t\t\t&.top {\r\n\t\t\t\ttop: $offset;\r\n\r\n\t\t\t\t&::after {\r\n\t\t\t\t\twidth: 40rpx;\r\n\t\t\t\t\tborder-top: 10rpx solid #fff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&.bottom {\r\n\t\t\t\tbottom: $offset;\r\n\r\n\t\t\t\t&::after {\r\n\t\t\t\t\twidth: 40rpx;\r\n\t\t\t\t\tborder-bottom: 10rpx solid #fff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t&.left.bottom,\r\n\t\t\t&.right.bottom,\r\n\t\t\t&.left.top,\r\n\t\t\t&.left.bottom {\r\n\t\t\t\t&::after {\r\n\t\t\t\t\twidth: 30rpx;\r\n\t\t\t\t\theight: 30rpx;\r\n\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.cropper {\r\n\t\t\tposition: absolute;\r\n\t\t\tborder: 1px solid #eee;\r\n\t\t\tbox-sizing: content-box;\r\n\t\t\t// transform-origin: center center;\r\n\t\t\toutline: 999px solid rgba(0, 0, 0, 0.5);\r\n\t\t\twill-change: left, top, width, height;\r\n\r\n\t\t\t// display: contain;\r\n\t\t\t// pointer-events: none;\r\n\t\t\t.mask {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\topacity: 0.5;\r\n\t\t\t}\r\n\r\n\t\t\t.line {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\t// background-color: #eee;\r\n\t\t\t}\r\n\r\n\t\t\t.row {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: 0px;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tborder-top: 1px dashed #007aff;\r\n\t\t\t}\r\n\r\n\t\t\t.col {\r\n\t\t\t\theight: 100%;\r\n\t\t\t\twidth: 0px;\r\n\t\t\t\tborder-left: 1px dashed #007aff;\r\n\t\t\t}\r\n\r\n\t\t\t.row1 {\r\n\t\t\t\ttop: 33%;\r\n\t\t\t}\r\n\r\n\t\t\t.row2 {\r\n\t\t\t\ttop: 66%;\r\n\t\t\t}\r\n\r\n\t\t\t.col1 {\r\n\t\t\t\tleft: 33%;\r\n\t\t\t}\r\n\r\n\t\t\t.col2 {\r\n\t\t\t\tleft: 66%;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// .slot {\r\n\t// \tposition: relative;\r\n\t// \tpadding-top: 20rpx;\r\n\t// }\r\n}\r\n\r\n.anim {\r\n\ttransition: 0.2s;\r\n}\r\n</style>\r\n","import Component from '/Users/sapphirell/Documents/git/dogdogdoll-uniapp/uni_modules/bt-cropper/components/bt-cropper/bt-cropper.vue'\nwx.createComponent(Component)"],"names":["uni","parseUnit","path"],"mappings":"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"}
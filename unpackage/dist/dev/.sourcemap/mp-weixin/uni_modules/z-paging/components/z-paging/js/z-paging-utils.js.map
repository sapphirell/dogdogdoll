{"version":3,"file":"z-paging-utils.js","sources":["uni_modules/z-paging/components/z-paging/js/z-paging-utils.js"],"sourcesContent":["// [z-paging]工具类\n\nimport zLocalConfig from '../config/index'\nimport c from './z-paging-constant'\n\nconst storageKey = 'Z-PAGING-REFRESHER-TIME-STORAGE-KEY';\nlet config = null;\nlet configLoaded = false;\nlet cachedSystemInfo = null;\nconst timeoutMap = {};\n\n// 获取默认配置信息\nfunction gc(key, defaultValue) {\n\t// 这里return一个函数以解决在vue3+appvue中，props默认配置读取在main.js之前执行导致uni.$zp全局配置无效的问题。相当于props的default中传入一个带有返回值的函数\n\treturn () => {\n\t\t// 处理z-paging全局配置\n\t\t_handleDefaultConfig();\n\t\t// 如果全局配置不存在，则返回默认值\n\t\tif (!config) return defaultValue;\n\t\tconst value = config[key];\n\t\t// 如果全局配置存在但对应的配置项不存在，则返回默认值；反之返回配置项\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n}\n\n// 获取最终的touch位置\nfunction getTouch(e) {\n\tlet touch = null;\n\tif (e.touches && e.touches.length) {\n\t\ttouch = e.touches[0];\n\t} else if (e.changedTouches && e.changedTouches.length) {\n\t\ttouch = e.changedTouches[0];\n\t} else if (e.datail && e.datail != {}) {\n\t\ttouch = e.datail;\n\t} else {\n\t\treturn { touchX: 0, touchY: 0 }\n\t}\n\treturn {\n\t\ttouchX: touch.clientX,\n\t\ttouchY: touch.clientY\n\t};\n}\n\n// 判断当前手势是否在z-paging内触发\nfunction getTouchFromZPaging(target) {\n\tif (target && target.tagName && target.tagName !== 'BODY' && target.tagName !== 'UNI-PAGE-BODY') {\n\t\tconst classList = target.classList;\n\t\tif (classList && classList.contains('z-paging-content')) {\n\t\t\t// 此处额外记录当前z-paging是否是页面滚动、是否滚动到了顶部、是否是聊天记录模式以传给renderjs。避免不同z-paging组件renderjs内部判断数据互相影响导致的各种问题\n\t\t\treturn {\n\t\t\t\tisFromZp: true,\n\t\t\t\tisPageScroll: classList.contains('z-paging-content-page'),\n\t\t\t\tisReachedTop: classList.contains('z-paging-reached-top'),\n\t\t\t\tisUseChatRecordMode: classList.contains('z-paging-use-chat-record-mode')\n\t\t\t};\n\t\t} else {\n\t\t\treturn getTouchFromZPaging(target.parentNode);\n\t\t}\n\t} else {\n\t\treturn { isFromZp: false };\n\t}\n}\n\n// 递归获取z-paging所在的parent，如果查找不到则返回null\nfunction getParent(parent) {\n\tif (!parent) return null;\n\tif (parent.$refs.paging) return parent;\n\treturn getParent(parent.$parent);\n}\n\n// 打印错误信息\nfunction consoleErr(err) {\n\tconsole.error(`[z-paging]${err}`);\n}\n\n// 延时操作，如果key存在，调用时清除对应key之前的延时操作\nfunction delay(callback, ms = c.delayTime, key) {\n\tconst timeout = setTimeout(callback, ms);;\n\tif (!!key) {\n\t\ttimeoutMap[key] && clearTimeout(timeoutMap[key]);\n\t\ttimeoutMap[key] = timeout;\n\t}\n\treturn timeout;\n}\n\n// 设置下拉刷新时间\nfunction setRefesrherTime(time, key) {\n\tconst datas = getRefesrherTime() || {};\n\tdatas[key] = time;\n\tuni.setStorageSync(storageKey, datas);\n}\n\n// 获取下拉刷新时间\nfunction getRefesrherTime() {\n\treturn uni.getStorageSync(storageKey);\n}\n\n// 通过下拉刷新标识key获取下拉刷新时间\nfunction getRefesrherTimeByKey(key) {\n\tconst datas = getRefesrherTime();\n\treturn datas && datas[key] ? datas[key] : null;\n}\n\n// 通过下拉刷新标识key获取下拉刷新时间(格式化之后)\nfunction getRefesrherFormatTimeByKey(key, textMap) {\n\tconst time = getRefesrherTimeByKey(key);\n\tconst timeText = time ? _timeFormat(time, textMap) : textMap.none;\n\treturn `${textMap.title}${timeText}`;\n}\n\n// 将文本的px或者rpx转为px的值\nfunction convertToPx(text) {\n\tconst dataType = Object.prototype.toString.call(text);\n\tif (dataType === '[object Number]') return text;\n\tlet isRpx = false;\n\tif (text.indexOf('rpx') !== -1 || text.indexOf('upx') !== -1) {\n\t\ttext = text.replace('rpx', '').replace('upx', '');\n\t\tisRpx = true;\n\t} else if (text.indexOf('px') !== -1) {\n\t\ttext = text.replace('px', '');\n\t}\n\tif (!isNaN(text)) {\n\t\tif (isRpx) return Number(rpx2px(text));\n\t\treturn Number(text);\n\t}\n\treturn 0;\n}\n\n// rpx => px，预留的兼容处理\nfunction rpx2px(rpx) {\n\treturn uni.upx2px(rpx);\n}\n\n// 同步获取系统信息，兼容不同平台\nfunction getSystemInfoSync(useCache = false) {\n\tif (useCache && cachedSystemInfo) {\n\t\treturn cachedSystemInfo;\n\t}\n\t// 目前只用到了deviceInfo、appBaseInfo和windowInfo中的信息，因此仅整合这两个信息数据\n\tconst infoTypes = ['DeviceInfo', 'AppBaseInfo', 'WindowInfo'];\n\tconst { deviceInfo, appBaseInfo, windowInfo } = infoTypes.reduce((acc, key) => {\n\t\tconst method = `get${key}`;\n\t\tif (uni[method] && uni.canIUse(method)) {\n\t\t\tacc[key.charAt(0).toLowerCase() + key.slice(1)] = uni[method]();\n\t\t}\n\t\treturn acc;\n\t}, {});\n\t// 如果deviceInfo、appBaseInfo和windowInfo都可以从各自专属的api中获取，则整合它们的数据\n\tif (deviceInfo && appBaseInfo && windowInfo) {\n\t\tcachedSystemInfo = { ...deviceInfo, ...appBaseInfo, ...windowInfo };\n\t} else {\n\t\t// 使用uni.getSystemInfoSync兜底，确保能获取到最终的系统信息\n\t\tcachedSystemInfo = uni.getSystemInfoSync();\n\t}\n\treturn cachedSystemInfo;\n}\n\n// 获取当前时间\nfunction getTime() {\n\treturn (new Date()).getTime();\n}\n\n// 获取z-paging实例id，随机生成10位数字+字母\nfunction getInstanceId() {\n\tconst s = [];\n\tconst hexDigits = \"0123456789abcdef\";\n\tfor (let i = 0; i < 10; i++) {\n\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t}\n\treturn s.join('') + getTime();\n}\n\n// 等待一段时间\nfunction wait(ms) {\n\treturn new Promise(resolve => {\n\t\tsetTimeout(resolve, ms);\n\t});\n}\n\n// 是否是promise\nfunction isPromise(func) {\n\treturn Object.prototype.toString.call(func) === '[object Promise]';\n}\n\n// 添加单位\nfunction addUnit(value, unit) {\n\tif (Object.prototype.toString.call(value) === '[object String]') {\n\t\tlet tempValue = value;\n\t\ttempValue = tempValue.replace('rpx', '').replace('upx', '').replace('px', '');\n\t\tif (value.indexOf('rpx') === -1 && value.indexOf('upx') === -1 && value.indexOf('px') !== -1) {\n\t\t\ttempValue = parseFloat(tempValue) * 2;\n\t\t}\n\t\tvalue = tempValue;\n\t}\n\treturn unit === 'rpx' ? value + 'rpx' : (value / 2) + 'px';\n}\n\n// 深拷贝\nfunction deepCopy(obj) {\n\tif (typeof obj !== 'object' || obj === null) return obj;\n\tlet newObj = Array.isArray(obj) ? [] : {};\n\tfor (let key in obj) {\n\t\tif (obj.hasOwnProperty(key)) {\n\t\t\tnewObj[key] = deepCopy(obj[key]);\n\t\t}\n\t}\n\treturn newObj;\n}\n\n// ------------------ 私有方法 ------------------------\n// 处理全局配置\nfunction _handleDefaultConfig() {\n\t// 确保只加载一次全局配置\n\tif (configLoaded) return;\n\t// 优先从config.js中读取\n\tif (zLocalConfig && Object.keys(zLocalConfig).length) {\n\t\tconfig = zLocalConfig;\n\t}\n\t// 如果在config.js中读取不到，则尝试到uni.$zp读取\n\tif (!config && uni.$zp) {\n\t\tconfig = uni.$zp.config;\n\t}\n\t// 将config中的短横线写法全部转为驼峰写法，使得读取配置时可以直接通过key去匹配，而非读取每个配置时候再去转，减少不必要的性能开支\n\tconfig = config ? Object.keys(config).reduce((result, key) => {\n\t\tresult[_toCamelCase(key)] = config[key];\n\t\treturn result;\n\t}, {}) : null;\n\tconfigLoaded = true;\n}\n\n// 时间格式化\nfunction _timeFormat(time, textMap) {\n\tconst date = new Date(time);\n\tconst currentDate = new Date();\n\t// 设置time对应的天，去除时分秒，使得可以直接比较日期\n\tconst dateDay = new Date(time).setHours(0, 0, 0, 0);\n\t// 设置当前的天，去除时分秒，使得可以直接比较日期\n\tconst currentDateDay = new Date().setHours(0, 0, 0, 0);\n\tconst disTime = dateDay - currentDateDay;\n\tlet dayStr = '';\n\tconst timeStr = _dateTimeFormat(date);\n\tif (disTime === 0) {\n\t\tdayStr = textMap.today;\n\t} else if (disTime === -86400000) {\n\t\tdayStr = textMap.yesterday;\n\t} else {\n\t\tdayStr = _dateDayFormat(date, date.getFullYear() !== currentDate.getFullYear());\n\t}\n\treturn `${dayStr} ${timeStr}`;\n}\n\n// date格式化为年月日\nfunction _dateDayFormat(date, showYear = true) {\n\tconst year = date.getFullYear();\n\tconst month = date.getMonth() + 1;\n\tconst day = date.getDate();\n\treturn showYear ? `${year}-${_fullZeroToTwo(month)}-${_fullZeroToTwo(day)}` : `${_fullZeroToTwo(month)}-${_fullZeroToTwo(day)}`;\n}\n\n// data格式化为时分\nfunction _dateTimeFormat(date) {\n\tconst hour = date.getHours();\n\tconst minute = date.getMinutes();\n\treturn `${_fullZeroToTwo(hour)}:${_fullZeroToTwo(minute)}`;\n}\n\n// 不满2位在前面填充0\nfunction _fullZeroToTwo(str) {\n\tstr = str.toString();\n\treturn str.length === 1 ? '0' + str : str;\n}\n\n// 驼峰转短横线\nfunction _toKebab(value) {\n\treturn value.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n}\n\n// 短横线转驼峰\nfunction _toCamelCase(value) {\n\treturn value.replace(/-([a-z])/g, (_, group1) => group1.toUpperCase());\n}\n\n\nexport default {\n\tgc,\n\tsetRefesrherTime,\n\tgetRefesrherFormatTimeByKey,\n\tgetTouch,\n\tgetTouchFromZPaging,\n\tgetParent,\n\tconvertToPx,\n\tgetTime,\n\tgetInstanceId,\n\tconsoleErr,\n\tdelay,\n\twait,\n\tisPromise,\n\taddUnit,\n\tdeepCopy,\n\trpx2px,\n\tgetSystemInfoSync\n};\n"],"names":["uni","c","zLocalConfig"],"mappings":"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"}
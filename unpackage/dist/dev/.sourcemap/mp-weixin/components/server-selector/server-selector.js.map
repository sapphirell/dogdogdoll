{"version":3,"file":"server-selector.js","sources":["components/server-selector/server-selector.vue","/Users/sapphirell/Documents/git/dogdogdoll-uniapp/components/server-selector/server-selector.vue?type=component"],"sourcesContent":["<template>\n  <!-- 触发按钮 - 只显示延迟时间 -->\n  <view class=\"server-selector-trigger\" @click=\"showModal = true\">\n    <uni-icons type=\"paperplane\" size=\"24\" color=\"#5db7ff\"></uni-icons>\n    <text>{{ currentPing >= 0 ? currentPing + 'ms' : '9999ms' }}</text>\n  </view>\n  \n  <!-- 服务器选择弹窗 -->\n  <common-modal :visible=\"showModal\" @update:visible=\"showModal = $event\" top=\"15vh\">\n    <view class=\"server-modal-content\">\n      <view class=\"modal-header\">\n        <text class=\"title\">选择服务器</text>\n        <text class=\"subtitle\">点击服务器可切换，当前延迟：{{ currentPing >= 0 ? currentPing + 'ms' : '-1ms' }}</text>\n      </view>\n      \n      <view class=\"server-list\">\n        <view \n          v-for=\"(server, index) in servers\" \n          :key=\"index\"\n          class=\"server-item\"\n          :class=\"{ \n            active: server.url === selectedServer,\n            loading: server.ping === -1\n          }\"\n          @click=\"selectServer(server)\"\n        >\n          <view class=\"server-info\">\n            <text class=\"name\">{{ server.name }}</text>\n          </view>\n          \n          <view class=\"ping-info\">\n            <uni-icons v-if=\"server.ping === -1\" type=\"spinner-cycle\" size=\"16\" color=\"#999\" class=\"spinner\"></uni-icons>\n            <text v-else-if=\"server.ping === -2\" class=\"ping-error\">请求失败</text>\n            <text v-else class=\"ping-value\">{{ server.ping }} ms</text>\n          </view>\n        </view>\n      </view>\n    </view>\n  </common-modal>\n</template>\n\n<script setup>\nimport { ref, reactive, watch, onMounted, onUnmounted } from 'vue';\nimport { cnURL, usURL, devUrl, websiteUrl } from '@/common/config.js';\n\n// 服务器列表\nconst servers = reactive([\n  { \n    name: '中国', \n    url: cnURL, \n    ping: -1 // -1: 测试中, -2: 失败, >0: 延迟\n  },\n  { \n    name: '美国', \n    url: usURL, \n    ping: -1 \n  },\n  { \n    name: 'Localhost', \n    url: devUrl, \n    ping: -1 \n  }\n]);\n\nconst showModal = ref(false);\nconst selectedServer = ref('');\nconst currentPing = ref(-1); // 初始为测试中状态\nlet pingInterval = null; // 存储定时器\n\n// 定义emit事件\nconst emit = defineEmits(['server-change']);\n\n// 组件挂载时从本地存储加载已选择的服务器\nonMounted(() => {\n  const savedServer = uni.getStorageSync('selectedServer');\n  selectedServer.value = savedServer || cnURL;\n  websiteUrl.value = selectedServer.value; // 更新全局websiteUrl.value\n  \n  // 挂载后立即测试当前服务器的延迟\n  testCurrentServer();\n  \n  // 启动5秒一次的定时ping\n  startPingInterval();\n});\n\nonUnmounted(() => {\n  // 组件卸载时清除定时器\n  clearInterval(pingInterval);\n});\n\n// 启动定时ping\nconst startPingInterval = () => {\n  pingInterval = setInterval(() => {\n    testCurrentServer();\n  }, 5000); // 每5秒执行一次\n};\n\n// 测试当前服务器的延迟\nconst testCurrentServer = async () => {\n  try {\n    const startTime = Date.now();\n    await pingServer(selectedServer.value);\n    currentPing.value = Date.now() - startTime;\n  } catch (error) {\n    currentPing.value = -2; // 测试失败\n  }\n};\n\n// 监听弹窗显示状态，显示时测试所有服务器\nwatch(showModal, (newVal) => {\n  if (newVal) {\n    pingAllServers();\n  }\n});\n\n// 测试所有服务器\nconst pingAllServers = async () => {\n  for (const server of servers) {\n    server.ping = -1; // 设置为测试中状态\n    try {\n      const startTime = Date.now();\n      await pingServer(server.url);\n      server.ping = Date.now() - startTime;\n      \n      // 更新当前服务器的延迟\n      if (server.url === selectedServer.value) {\n        currentPing.value = server.ping;\n      }\n    } catch (error) {\n      server.ping = -2; // 请求失败\n      \n      // 如果是当前服务器测试失败\n      if (server.url === selectedServer.value) {\n        currentPing.value = -2;\n      }\n    }\n  }\n};\n\n// Ping单个服务器\nconst pingServer = (url) => {\n  return new Promise((resolve, reject) => {\n    uni.request({\n      url: `${url}/ping`,\n      method: 'GET',\n      timeout: 5000, // 5秒超时\n      success: () => resolve(),\n      fail: () => reject()\n    });\n  });\n};\n\n// 选择服务器\nconst selectServer = (server) => {\n  if (server.ping === -2) {\n    uni.showToast({\n      title: '服务器连接失败，无法选择',\n      icon: 'none'\n    });\n    return;\n  }\n  \n  selectedServer.value = server.url;\n  websiteUrl.value = server.url; // 更新全局websiteUrl.value\n  uni.setStorageSync('selectedServer', server.url);\n  \n  // 更新当前延迟显示\n  currentPing.value = server.ping;\n  \n  uni.showToast({\n    title: `已切换到${server.name}`,\n    icon: 'success'\n  });\n  \n  // 关闭弹窗\n  showModal.value = false;\n  \n  // 触发选择事件\n  emit('server-change', {\n    server: server,\n    ping: server.ping\n  });\n};\n</script>\n\n\n<style lang=\"less\">\n.server-selector-trigger {\n  display: flex;\n  align-items: center;\n  padding: 10rpx 20rpx;\n  background-color: #f0f4ff;\n  border-radius: 50rpx;\n  font-size: 28rpx;\n  color: #5db7ff;\n  position: fixed;\n  bottom: 160rpx;\n  right: 30rpx;\n  z-index: 99;\n  box-shadow: 0 4rpx 15rpx rgba(93, 183, 255, 0.3);\n  \n  text {\n    margin-left: 10rpx;\n    font-weight: 500;\n  }\n}\n\n.server-modal-content {\n  padding: 30rpx;\n  width: 500rpx;\n  \n  .modal-header {\n    margin-bottom: 30rpx;\n    \n    .title {\n      font-size: 36rpx;\n      font-weight: bold;\n      color: #333;\n      display: block;\n      margin-bottom: 10rpx;\n    }\n    \n    .subtitle {\n      font-size: 26rpx;\n      color: #666;\n    }\n  }\n  \n  .server-list {\n    .server-item {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 25rpx 30rpx;\n      margin-bottom: 20rpx;\n      background-color: #f8faff;\n      border-radius: 16rpx;\n      border: 2rpx solid #e8ecff;\n      transition: all 0.3s ease;\n      \n      &.active {\n        background-color: #e6f3ff;\n        border-color: #5db7ff;\n        box-shadow: 0 4rpx 10rpx rgba(93, 183, 255, 0.2);\n      }\n      \n      &.loading {\n        opacity: 0.8;\n      }\n      \n      .server-info {\n        flex: 1;\n        \n        .name {\n          display: block;\n          font-size: 32rpx;  // 稍微加大字体\n          font-weight: 500;\n          color: #333;\n        }\n        \n        /* 移除了URL样式 */\n      }\n      \n      .ping-info {\n        font-size: 28rpx;\n        font-weight: 500;\n        min-width: 120rpx;\n        text-align: right;\n        \n        .ping-value {\n          color: #5db7ff;\n        }\n        \n        .ping-error {\n          color: #ff6b6b;\n        }\n        \n        .spinner {\n          animation: rotate 1.5s linear infinite;\n        }\n      }\n    }\n  }\n}\n\n@keyframes rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n</style>\n","import Component from '/Users/sapphirell/Documents/git/dogdogdoll-uniapp/components/server-selector/server-selector.vue'\nwx.createComponent(Component)"],"names":["reactive","cnURL","usURL","devUrl","ref","onMounted","uni","websiteUrl","onUnmounted","watch","Component"],"mappings":";;;;;;;;;;;;;;;;;AA8CA,UAAM,UAAUA,cAAAA,SAAS;AAAA,MACvB;AAAA,QACE,MAAM;AAAA,QACN,KAAKC,cAAK;AAAA,QACV,MAAM;AAAA;AAAA,MACP;AAAA,MACD;AAAA,QACE,MAAM;AAAA,QACN,KAAKC,cAAK;AAAA,QACV,MAAM;AAAA,MACP;AAAA,MACD;AAAA,QACE,MAAM;AAAA,QACN,KAAKC,cAAM;AAAA,QACX,MAAM;AAAA,MACP;AAAA,IACH,CAAC;AAED,UAAM,YAAYC,cAAAA,IAAI,KAAK;AAC3B,UAAM,iBAAiBA,cAAAA,IAAI,EAAE;AAC7B,UAAM,cAAcA,cAAAA,IAAI,EAAE;AAC1B,QAAI,eAAe;AAGnB,UAAM,OAAO;AAGbC,kBAAAA,UAAU,MAAM;AACd,YAAM,cAAcC,cAAAA,MAAI,eAAe,gBAAgB;AACvD,qBAAe,QAAQ,eAAeL;AACtCM,+BAAW,QAAQ,eAAe;AAGlC;AAGA;IACF,CAAC;AAEDC,kBAAAA,YAAY,MAAM;AAEhB,oBAAc,YAAY;AAAA,IAC5B,CAAC;AAGD,UAAM,oBAAoB,MAAM;AAC9B,qBAAe,YAAY,MAAM;AAC/B;MACD,GAAE,GAAI;AAAA,IACT;AAGA,UAAM,oBAAoB,YAAY;AACpC,UAAI;AACF,cAAM,YAAY,KAAK;AACvB,cAAM,WAAW,eAAe,KAAK;AACrC,oBAAY,QAAQ,KAAK,IAAG,IAAK;AAAA,MAClC,SAAQ,OAAO;AACd,oBAAY,QAAQ;AAAA,MACrB;AAAA,IACH;AAGAC,kBAAAA,MAAM,WAAW,CAAC,WAAW;AAC3B,UAAI,QAAQ;AACV;MACD;AAAA,IACH,CAAC;AAGD,UAAM,iBAAiB,YAAY;AACjC,iBAAW,UAAU,SAAS;AAC5B,eAAO,OAAO;AACd,YAAI;AACF,gBAAM,YAAY,KAAK;AACvB,gBAAM,WAAW,OAAO,GAAG;AAC3B,iBAAO,OAAO,KAAK,IAAG,IAAK;AAG3B,cAAI,OAAO,QAAQ,eAAe,OAAO;AACvC,wBAAY,QAAQ,OAAO;AAAA,UAC5B;AAAA,QACF,SAAQ,OAAO;AACd,iBAAO,OAAO;AAGd,cAAI,OAAO,QAAQ,eAAe,OAAO;AACvC,wBAAY,QAAQ;AAAA,UACrB;AAAA,QACF;AAAA,MACF;AAAA,IACH;AAGA,UAAM,aAAa,CAAC,QAAQ;AAC1B,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCH,sBAAAA,MAAI,QAAQ;AAAA,UACV,KAAK,GAAG,GAAG;AAAA,UACX,QAAQ;AAAA,UACR,SAAS;AAAA;AAAA,UACT,SAAS,MAAM,QAAS;AAAA,UACxB,MAAM,MAAM,OAAQ;AAAA,QAC1B,CAAK;AAAA,MACL,CAAG;AAAA,IACH;AAGA,UAAM,eAAe,CAAC,WAAW;AAC/B,UAAI,OAAO,SAAS,IAAI;AACtBA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACZ,CAAK;AACD;AAAA,MACD;AAED,qBAAe,QAAQ,OAAO;AAC9BC,+BAAW,QAAQ,OAAO;AAC1BD,oBAAAA,MAAI,eAAe,kBAAkB,OAAO,GAAG;AAG/C,kBAAY,QAAQ,OAAO;AAE3BA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO,OAAO,OAAO,IAAI;AAAA,QACzB,MAAM;AAAA,MACV,CAAG;AAGD,gBAAU,QAAQ;AAGlB,WAAK,iBAAiB;AAAA,QACpB;AAAA,QACA,MAAM,OAAO;AAAA,MACjB,CAAG;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrLA,GAAG,gBAAgBI,SAAS;"}